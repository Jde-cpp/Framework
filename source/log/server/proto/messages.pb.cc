// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Acknowledgement_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CustomMessage_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_FromServerUnion_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenericFromServer_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Instance_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogLevels_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Message_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestString_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Strings_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ToServerUnion_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace Jde {
namespace Logging {
namespace Proto {
class InstanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Instance> _instance;
} _Instance_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
} _Message_default_instance_;
class RequestStringDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestString> _instance;
} _RequestString_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Status> _instance;
} _Status_default_instance_;
class CustomMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomMessage> _instance;
} _CustomMessage_default_instance_;
class ToServerUnionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ToServerUnion> _instance;
  const ::Jde::Logging::Proto::Instance* instance_;
  const ::Jde::Logging::Proto::Message* message_;
  const ::Jde::Logging::Proto::RequestString* string_;
  const ::Jde::Logging::Proto::Status* status_;
  const ::Jde::Logging::Proto::CustomMessage* custom_;
} _ToServerUnion_default_instance_;
class ToServerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ToServer> _instance;
} _ToServer_default_instance_;
class AcknowledgementDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Acknowledgement> _instance;
} _Acknowledgement_default_instance_;
class GenericFromServerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenericFromServer> _instance;
} _GenericFromServer_default_instance_;
class StringsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Strings> _instance;
} _Strings_default_instance_;
class LogLevelsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogLevels> _instance;
} _LogLevels_default_instance_;
class FromServerUnionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FromServerUnion> _instance;
  const ::Jde::Logging::Proto::Acknowledgement* acknowledgement_;
  const ::Jde::Logging::Proto::GenericFromServer* generic_;
  const ::Jde::Logging::Proto::Strings* strings_;
  const ::Jde::Logging::Proto::LogLevels* loglevels_;
  const ::Jde::Logging::Proto::CustomMessage* custom_;
} _FromServerUnion_default_instance_;
class FromServerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FromServer> _instance;
} _FromServer_default_instance_;
}  // namespace Proto
}  // namespace Logging
}  // namespace Jde
static void InitDefaultsscc_info_Acknowledgement_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_Acknowledgement_default_instance_;
    new (ptr) ::Jde::Logging::Proto::Acknowledgement();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::Acknowledgement::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Acknowledgement_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Acknowledgement_messages_2eproto}, {}};

static void InitDefaultsscc_info_CustomMessage_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_CustomMessage_default_instance_;
    new (ptr) ::Jde::Logging::Proto::CustomMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::CustomMessage::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CustomMessage_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CustomMessage_messages_2eproto}, {}};

static void InitDefaultsscc_info_FromServer_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_FromServer_default_instance_;
    new (ptr) ::Jde::Logging::Proto::FromServer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::FromServer::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FromServer_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FromServer_messages_2eproto}, {
      &scc_info_FromServerUnion_messages_2eproto.base,}};

static void InitDefaultsscc_info_FromServerUnion_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_FromServerUnion_default_instance_;
    new (ptr) ::Jde::Logging::Proto::FromServerUnion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::FromServerUnion::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_FromServerUnion_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_FromServerUnion_messages_2eproto}, {
      &scc_info_Acknowledgement_messages_2eproto.base,
      &scc_info_GenericFromServer_messages_2eproto.base,
      &scc_info_Strings_messages_2eproto.base,
      &scc_info_LogLevels_messages_2eproto.base,
      &scc_info_CustomMessage_messages_2eproto.base,}};

static void InitDefaultsscc_info_GenericFromServer_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_GenericFromServer_default_instance_;
    new (ptr) ::Jde::Logging::Proto::GenericFromServer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::GenericFromServer::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenericFromServer_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenericFromServer_messages_2eproto}, {}};

static void InitDefaultsscc_info_Instance_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_Instance_default_instance_;
    new (ptr) ::Jde::Logging::Proto::Instance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::Instance::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Instance_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Instance_messages_2eproto}, {}};

static void InitDefaultsscc_info_LogLevels_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_LogLevels_default_instance_;
    new (ptr) ::Jde::Logging::Proto::LogLevels();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::LogLevels::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogLevels_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogLevels_messages_2eproto}, {}};

static void InitDefaultsscc_info_Message_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_Message_default_instance_;
    new (ptr) ::Jde::Logging::Proto::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::Message::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Message_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Message_messages_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_RequestString_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_RequestString_default_instance_;
    new (ptr) ::Jde::Logging::Proto::RequestString();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::RequestString::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestString_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestString_messages_2eproto}, {}};

static void InitDefaultsscc_info_Status_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_Status_default_instance_;
    new (ptr) ::Jde::Logging::Proto::Status();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::Status::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Status_messages_2eproto}, {}};

static void InitDefaultsscc_info_Strings_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_Strings_default_instance_;
    new (ptr) ::Jde::Logging::Proto::Strings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::Strings::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Strings_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Strings_messages_2eproto}, {}};

static void InitDefaultsscc_info_ToServer_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_ToServer_default_instance_;
    new (ptr) ::Jde::Logging::Proto::ToServer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::ToServer::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ToServer_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ToServer_messages_2eproto}, {
      &scc_info_ToServerUnion_messages_2eproto.base,}};

static void InitDefaultsscc_info_ToServerUnion_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Logging::Proto::_ToServerUnion_default_instance_;
    new (ptr) ::Jde::Logging::Proto::ToServerUnion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Logging::Proto::ToServerUnion::InitAsDefaultInstance();
}

JDE_NATIVE_VISIBILITY ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ToServerUnion_messages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ToServerUnion_messages_2eproto}, {
      &scc_info_Instance_messages_2eproto.base,
      &scc_info_Message_messages_2eproto.base,
      &scc_info_RequestString_messages_2eproto.base,
      &scc_info_Status_messages_2eproto.base,
      &scc_info_CustomMessage_messages_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_messages_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_messages_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_messages_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_messages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, applicationname_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, hostname_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, processid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, starttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, time_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, level_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, messageid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, fileid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, functionid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, linenumber_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, userid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, threadid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, field_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, starttime_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, memory_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, serverloglevel_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, clientloglevel_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomMessage, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomMessage, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Jde::Logging::Proto::ToServerUnionDefaultTypeInternal, instance_),
  offsetof(::Jde::Logging::Proto::ToServerUnionDefaultTypeInternal, message_),
  offsetof(::Jde::Logging::Proto::ToServerUnionDefaultTypeInternal, string_),
  offsetof(::Jde::Logging::Proto::ToServerUnionDefaultTypeInternal, status_),
  offsetof(::Jde::Logging::Proto::ToServerUnionDefaultTypeInternal, custom_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServer, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Acknowledgement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Acknowledgement, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::GenericFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::GenericFromServer, what_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::GenericFromServer, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, messages_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, files_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, functions_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, threads_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::LogLevels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::LogLevels, server_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::LogLevels, client_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Jde::Logging::Proto::FromServerUnionDefaultTypeInternal, acknowledgement_),
  offsetof(::Jde::Logging::Proto::FromServerUnionDefaultTypeInternal, generic_),
  offsetof(::Jde::Logging::Proto::FromServerUnionDefaultTypeInternal, strings_),
  offsetof(::Jde::Logging::Proto::FromServerUnionDefaultTypeInternal, loglevels_),
  offsetof(::Jde::Logging::Proto::FromServerUnionDefaultTypeInternal, custom_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServer, messages_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Jde::Logging::Proto::Instance)},
  { 9, -1, sizeof(::Jde::Logging::Proto::Message)},
  { 23, -1, sizeof(::Jde::Logging::Proto::RequestString)},
  { 31, -1, sizeof(::Jde::Logging::Proto::Status)},
  { 41, -1, sizeof(::Jde::Logging::Proto::CustomMessage)},
  { 48, -1, sizeof(::Jde::Logging::Proto::ToServerUnion)},
  { 59, -1, sizeof(::Jde::Logging::Proto::ToServer)},
  { 65, -1, sizeof(::Jde::Logging::Proto::Acknowledgement)},
  { 71, -1, sizeof(::Jde::Logging::Proto::GenericFromServer)},
  { 78, -1, sizeof(::Jde::Logging::Proto::Strings)},
  { 87, -1, sizeof(::Jde::Logging::Proto::LogLevels)},
  { 94, -1, sizeof(::Jde::Logging::Proto::FromServerUnion)},
  { 105, -1, sizeof(::Jde::Logging::Proto::FromServer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_Instance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_Message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_RequestString_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_Status_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_CustomMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_ToServerUnion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_ToServer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_Acknowledgement_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_GenericFromServer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_Strings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_LogLevels_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_FromServerUnion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Logging::Proto::_FromServer_default_instance_),
};

const char descriptor_table_protodef_messages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016messages.proto\022\021Jde.Logging.Proto\032\037goo"
  "gle/protobuf/timestamp.proto\"[\n\010Instance"
  "\022\027\n\017ApplicationName\030\001 \001(\t\022\020\n\010HostName\030\002 "
  "\001(\t\022\021\n\tProcessId\030\003 \001(\005\022\021\n\tStartTime\030\005 \001("
  "\r\"\340\001\n\007Message\022(\n\004Time\030\001 \001(\0132\032.google.pro"
  "tobuf.Timestamp\022+\n\005Level\030\002 \001(\0162\034.Jde.Log"
  "ging.Proto.ELogLevel\022\021\n\tMessageId\030\003 \001(\r\022"
  "\016\n\006FileId\030\004 \001(\r\022\022\n\nFunctionId\030\005 \001(\r\022\022\n\nL"
  "ineNumber\030\006 \001(\r\022\016\n\006UserId\030\007 \001(\r\022\020\n\010Threa"
  "dId\030\010 \001(\004\022\021\n\tVariables\030\t \003(\t\"U\n\rRequestS"
  "tring\022)\n\005Field\030\001 \001(\0162\032.Jde.Logging.Proto"
  ".EFields\022\n\n\002Id\030\002 \001(\r\022\r\n\005Value\030\003 \001(\t\"\250\001\n\006"
  "Status\022\021\n\tStartTime\030\001 \001(\r\022\016\n\006Memory\030\002 \001("
  "\004\0224\n\016ServerLogLevel\030\003 \001(\0162\034.Jde.Logging."
  "Proto.ELogLevel\0224\n\016ClientLogLevel\030\004 \001(\0162"
  "\034.Jde.Logging.Proto.ELogLevel\022\017\n\007Details"
  "\030\005 \003(\t\"3\n\rCustomMessage\022\021\n\tRequestId\030\001 \001"
  "(\r\022\017\n\007Message\030\002 \001(\014\"\215\002\n\rToServerUnion\022/\n"
  "\010Instance\030\001 \001(\0132\033.Jde.Logging.Proto.Inst"
  "anceH\000\022-\n\007Message\030\002 \001(\0132\032.Jde.Logging.Pr"
  "oto.MessageH\000\0222\n\006String\030\003 \001(\0132 .Jde.Logg"
  "ing.Proto.RequestStringH\000\022+\n\006Status\030\004 \001("
  "\0132\031.Jde.Logging.Proto.StatusH\000\0222\n\006Custom"
  "\030\005 \001(\0132 .Jde.Logging.Proto.CustomMessage"
  "H\000B\007\n\005Value\">\n\010ToServer\0222\n\010Messages\030\001 \003("
  "\0132 .Jde.Logging.Proto.ToServerUnion\"%\n\017A"
  "cknowledgement\022\022\n\nInstanceId\030\001 \001(\r\"V\n\021Ge"
  "nericFromServer\022,\n\004What\030\001 \001(\0162\036.Jde.Logg"
  "ing.Proto.EFromServer\022\023\n\013Description\030\002 \001"
  "(\t\"N\n\007Strings\022\020\n\010Messages\030\001 \003(\r\022\r\n\005Files"
  "\030\002 \003(\r\022\021\n\tFunctions\030\003 \003(\r\022\017\n\007Threads\030\004 \003"
  "(\r\"g\n\tLogLevels\022,\n\006Server\030\001 \001(\0162\034.Jde.Lo"
  "gging.Proto.ELogLevel\022,\n\006Client\030\002 \001(\0162\034."
  "Jde.Logging.Proto.ELogLevel\"\250\002\n\017FromServ"
  "erUnion\022=\n\017Acknowledgement\030\001 \001(\0132\".Jde.L"
  "ogging.Proto.AcknowledgementH\000\0227\n\007Generi"
  "c\030\002 \001(\0132$.Jde.Logging.Proto.GenericFromS"
  "erverH\000\022-\n\007Strings\030\003 \001(\0132\032.Jde.Logging.P"
  "roto.StringsH\000\0221\n\tLogLevels\030\004 \001(\0132\034.Jde."
  "Logging.Proto.LogLevelsH\000\0222\n\006Custom\030\005 \001("
  "\0132 .Jde.Logging.Proto.CustomMessageH\000B\007\n"
  "\005Value\"B\n\nFromServer\0224\n\010Messages\030\001 \003(\0132\""
  ".Jde.Logging.Proto.FromServerUnion*j\n\tEL"
  "ogLevel\022\t\n\005Trace\020\000\022\t\n\005Debug\020\001\022\017\n\013Informa"
  "tion\020\002\022\013\n\007Warning\020\003\022\t\n\005Error\020\004\022\014\n\010Critic"
  "al\020\005\022\020\n\014LogLevelNone\020\006*\370\001\n\007EFields\022\016\n\nFi"
  "eldsNone\020\000\022\022\n\016TimestampField\020\001\022\r\n\tMessag"
  "eId\020\002\022\020\n\014MessageField\020\004\022\t\n\005Level\020\010\022\n\n\006Fi"
  "leId\020\020\022\010\n\004File\020 \022\016\n\nFunctionId\020@\022\r\n\010Func"
  "tion\020\200\001\022\017\n\nLineNumber\020\200\002\022\013\n\006UserId\020\200\004\022\t\n"
  "\004User\020\200\010\022\r\n\010ThreadId\020\200\020\022\013\n\006Thread\020\200 \022\022\n\r"
  "VariableCount\020\200@\022\017\n\tSessionId\020\200\200\001*2\n\013EFr"
  "omServer\022\010\n\004Ping\020\000\022\n\n\006Error_\020\001\022\r\n\tReadEr"
  "ror\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_messages_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_messages_2eproto_sccs[13] = {
  &scc_info_Acknowledgement_messages_2eproto.base,
  &scc_info_CustomMessage_messages_2eproto.base,
  &scc_info_FromServer_messages_2eproto.base,
  &scc_info_FromServerUnion_messages_2eproto.base,
  &scc_info_GenericFromServer_messages_2eproto.base,
  &scc_info_Instance_messages_2eproto.base,
  &scc_info_LogLevels_messages_2eproto.base,
  &scc_info_Message_messages_2eproto.base,
  &scc_info_RequestString_messages_2eproto.base,
  &scc_info_Status_messages_2eproto.base,
  &scc_info_Strings_messages_2eproto.base,
  &scc_info_ToServer_messages_2eproto.base,
  &scc_info_ToServerUnion_messages_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_messages_2eproto_once;
static bool descriptor_table_messages_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_2eproto = {
  &descriptor_table_messages_2eproto_initialized, descriptor_table_protodef_messages_2eproto, "messages.proto", 2133,
  &descriptor_table_messages_2eproto_once, descriptor_table_messages_2eproto_sccs, descriptor_table_messages_2eproto_deps, 13, 1,
  schemas, file_default_instances, TableStruct_messages_2eproto::offsets,
  file_level_metadata_messages_2eproto, 13, file_level_enum_descriptors_messages_2eproto, file_level_service_descriptors_messages_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_messages_2eproto), true);
namespace Jde {
namespace Logging {
namespace Proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELogLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messages_2eproto);
  return file_level_enum_descriptors_messages_2eproto[0];
}
bool ELogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFields_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messages_2eproto);
  return file_level_enum_descriptors_messages_2eproto[1];
}
bool EFields_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFromServer_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messages_2eproto);
  return file_level_enum_descriptors_messages_2eproto[2];
}
bool EFromServer_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Instance::InitAsDefaultInstance() {
}
class Instance::_Internal {
 public:
};

Instance::Instance()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.Instance)
}
Instance::Instance(const Instance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  applicationname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationname().empty()) {
    applicationname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.applicationname_);
  }
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hostname().empty()) {
    hostname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  ::memcpy(&processid_, &from.processid_,
    static_cast<size_t>(reinterpret_cast<char*>(&starttime_) -
    reinterpret_cast<char*>(&processid_)) + sizeof(starttime_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Instance)
}

void Instance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Instance_messages_2eproto.base);
  applicationname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&processid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starttime_) -
      reinterpret_cast<char*>(&processid_)) + sizeof(starttime_));
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Instance)
  SharedDtor();
}

void Instance::SharedDtor() {
  applicationname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Instance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Instance& Instance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Instance_messages_2eproto.base);
  return *internal_default_instance();
}


void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Instance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&processid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starttime_) -
      reinterpret_cast<char*>(&processid_)) + sizeof(starttime_));
  _internal_metadata_.Clear();
}

const char* Instance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ApplicationName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_applicationname(), ptr, ctx, "Jde.Logging.Proto.Instance.ApplicationName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string HostName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_hostname(), ptr, ctx, "Jde.Logging.Proto.Instance.HostName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ProcessId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          processid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 StartTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Instance::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Instance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ApplicationName = 1;
  if (this->applicationname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationname().data(), static_cast<int>(this->_internal_applicationname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Instance.ApplicationName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationname(), target);
  }

  // string HostName = 2;
  if (this->hostname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hostname().data(), static_cast<int>(this->_internal_hostname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Instance.HostName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_hostname(), target);
  }

  // int32 ProcessId = 3;
  if (this->processid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_processid(), target);
  }

  // uint32 StartTime = 5;
  if (this->starttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_starttime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Instance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ApplicationName = 1;
  if (this->applicationname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationname());
  }

  // string HostName = 2;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hostname());
  }

  // int32 ProcessId = 3;
  if (this->processid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_processid());
  }

  // uint32 StartTime = 5;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_starttime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Instance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  const Instance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Instance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.Instance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.Instance)
    MergeFrom(*source);
  }
}

void Instance::MergeFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationname().size() > 0) {

    applicationname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.applicationname_);
  }
  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.processid() != 0) {
    _internal_set_processid(from._internal_processid());
  }
  if (from.starttime() != 0) {
    _internal_set_starttime(from._internal_starttime());
  }
}

void Instance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::InternalSwap(Instance* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  applicationname_.Swap(&other->applicationname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(processid_, other->processid_);
  swap(starttime_, other->starttime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Instance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::Jde::Logging::Proto::_Message_default_instance_._instance.get_mutable()->time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Message::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& time(const Message* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Message::_Internal::time(const Message* msg) {
  return *msg->time_;
}
void Message::clear_time() {
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
Message::Message()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      variables_(from.variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_time()) {
    time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&threadid_) -
    reinterpret_cast<char*>(&level_)) + sizeof(threadid_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Message)
}

void Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_messages_2eproto.base);
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threadid_) -
      reinterpret_cast<char*>(&time_)) + sizeof(threadid_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != internal_default_instance()) delete time_;
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_messages_2eproto.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variables_.Clear();
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threadid_) -
      reinterpret_cast<char*>(&level_)) + sizeof(threadid_));
  _internal_metadata_.Clear();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp Time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_level(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else goto handle_unusual;
        continue;
      // uint32 MessageId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          messageid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 FileId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          fileid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 FunctionId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          functionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 LineNumber = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          linenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 UserId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ThreadId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          threadid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string Variables = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_variables(), ptr, ctx, "Jde.Logging.Proto.Message.Variables");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp Time = 1;
  if (this->has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::time(this), target, stream);
  }

  // .Jde.Logging.Proto.ELogLevel Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_level(), target);
  }

  // uint32 MessageId = 3;
  if (this->messageid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_messageid(), target);
  }

  // uint32 FileId = 4;
  if (this->fileid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_fileid(), target);
  }

  // uint32 FunctionId = 5;
  if (this->functionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_functionid(), target);
  }

  // uint32 LineNumber = 6;
  if (this->linenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_linenumber(), target);
  }

  // uint32 UserId = 7;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_userid(), target);
  }

  // uint64 ThreadId = 8;
  if (this->threadid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_threadid(), target);
  }

  // repeated string Variables = 9;
  for (int i = 0, n = this->_internal_variables_size(); i < n; i++) {
    const auto& s = this->_internal_variables(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Message.Variables");
    target = stream->WriteString(9, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Variables = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(variables_.size());
  for (int i = 0, n = variables_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      variables_.Get(i));
  }

  // .google.protobuf.Timestamp Time = 1;
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .Jde.Logging.Proto.ELogLevel Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_level());
  }

  // uint32 MessageId = 3;
  if (this->messageid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_messageid());
  }

  // uint32 FileId = 4;
  if (this->fileid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_fileid());
  }

  // uint32 FunctionId = 5;
  if (this->functionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_functionid());
  }

  // uint32 LineNumber = 6;
  if (this->linenumber() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_linenumber());
  }

  // uint32 UserId = 7;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_userid());
  }

  // uint64 ThreadId = 8;
  if (this->threadid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_threadid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variables_.MergeFrom(from.variables_);
  if (from.has_time()) {
    _internal_mutable_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.messageid() != 0) {
    _internal_set_messageid(from._internal_messageid());
  }
  if (from.fileid() != 0) {
    _internal_set_fileid(from._internal_fileid());
  }
  if (from.functionid() != 0) {
    _internal_set_functionid(from._internal_functionid());
  }
  if (from.linenumber() != 0) {
    _internal_set_linenumber(from._internal_linenumber());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.threadid() != 0) {
    _internal_set_threadid(from._internal_threadid());
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  variables_.InternalSwap(&other->variables_);
  swap(time_, other->time_);
  swap(level_, other->level_);
  swap(messageid_, other->messageid_);
  swap(fileid_, other->fileid_);
  swap(functionid_, other->functionid_);
  swap(linenumber_, other->linenumber_);
  swap(userid_, other->userid_);
  swap(threadid_, other->threadid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestString::InitAsDefaultInstance() {
}
class RequestString::_Internal {
 public:
};

RequestString::RequestString()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.RequestString)
}
RequestString::RequestString(const RequestString& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&field_, &from.field_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&field_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.RequestString)
}

void RequestString::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestString_messages_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&field_)) + sizeof(id_));
}

RequestString::~RequestString() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.RequestString)
  SharedDtor();
}

void RequestString::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestString& RequestString::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestString_messages_2eproto.base);
  return *internal_default_instance();
}


void RequestString::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.RequestString)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&field_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

const char* RequestString::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.EFields Field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_field(static_cast<::Jde::Logging::Proto::EFields>(val));
        } else goto handle_unusual;
        continue;
      // uint32 Id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value(), ptr, ctx, "Jde.Logging.Proto.RequestString.Value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestString::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.RequestString)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.EFields Field = 1;
  if (this->field() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_field(), target);
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // string Value = 3;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.RequestString.Value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.RequestString)
  return target;
}

size_t RequestString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.RequestString)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // .Jde.Logging.Proto.EFields Field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_field());
  }

  // uint32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestString::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.RequestString)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestString* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestString>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.RequestString)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.RequestString)
    MergeFrom(*source);
  }
}

void RequestString::MergeFrom(const RequestString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.RequestString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.field() != 0) {
    _internal_set_field(from._internal_field());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void RequestString::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.RequestString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestString::CopyFrom(const RequestString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.RequestString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestString::IsInitialized() const {
  return true;
}

void RequestString::InternalSwap(RequestString* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(field_, other->field_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestString::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Status::InitAsDefaultInstance() {
}
class Status::_Internal {
 public:
};

Status::Status()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      details_(from.details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&memory_, &from.memory_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientloglevel_) -
    reinterpret_cast<char*>(&memory_)) + sizeof(clientloglevel_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Status)
}

void Status::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Status_messages_2eproto.base);
  ::memset(&memory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientloglevel_) -
      reinterpret_cast<char*>(&memory_)) + sizeof(clientloglevel_));
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Status)
  SharedDtor();
}

void Status::SharedDtor() {
}

void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Status& Status::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Status_messages_2eproto.base);
  return *internal_default_instance();
}


void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  details_.Clear();
  ::memset(&memory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientloglevel_) -
      reinterpret_cast<char*>(&memory_)) + sizeof(clientloglevel_));
  _internal_metadata_.Clear();
}

const char* Status::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 StartTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Memory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          memory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_serverloglevel(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_clientloglevel(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else goto handle_unusual;
        continue;
      // repeated string Details = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_details(), ptr, ctx, "Jde.Logging.Proto.Status.Details");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Status::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 StartTime = 1;
  if (this->starttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_starttime(), target);
  }

  // uint64 Memory = 2;
  if (this->memory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_memory(), target);
  }

  // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
  if (this->serverloglevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_serverloglevel(), target);
  }

  // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
  if (this->clientloglevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_clientloglevel(), target);
  }

  // repeated string Details = 5;
  for (int i = 0, n = this->_internal_details_size(); i < n; i++) {
    const auto& s = this->_internal_details(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Status.Details");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Status)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Details = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(details_.size());
  for (int i = 0, n = details_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      details_.Get(i));
  }

  // uint64 Memory = 2;
  if (this->memory() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_memory());
  }

  // uint32 StartTime = 1;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_starttime());
  }

  // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
  if (this->serverloglevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_serverloglevel());
  }

  // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
  if (this->clientloglevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_clientloglevel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Status>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.Status)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  details_.MergeFrom(from.details_);
  if (from.memory() != 0) {
    _internal_set_memory(from._internal_memory());
  }
  if (from.starttime() != 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.serverloglevel() != 0) {
    _internal_set_serverloglevel(from._internal_serverloglevel());
  }
  if (from.clientloglevel() != 0) {
    _internal_set_clientloglevel(from._internal_clientloglevel());
  }
}

void Status::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  details_.InternalSwap(&other->details_);
  swap(memory_, other->memory_);
  swap(starttime_, other->starttime_);
  swap(serverloglevel_, other->serverloglevel_);
  swap(clientloglevel_, other->clientloglevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CustomMessage::InitAsDefaultInstance() {
}
class CustomMessage::_Internal {
 public:
};

CustomMessage::CustomMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.CustomMessage)
}
CustomMessage::CustomMessage(const CustomMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.CustomMessage)
}

void CustomMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomMessage_messages_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
}

CustomMessage::~CustomMessage() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.CustomMessage)
  SharedDtor();
}

void CustomMessage::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CustomMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomMessage& CustomMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomMessage_messages_2eproto.base);
  return *internal_default_instance();
}


void CustomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.CustomMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
  _internal_metadata_.Clear();
}

const char* CustomMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(_internal_mutable_message(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomMessage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.CustomMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requestid(), target);
  }

  // bytes Message = 2;
  if (this->message().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.CustomMessage)
  return target;
}

size_t CustomMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.CustomMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // uint32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.CustomMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.CustomMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.CustomMessage)
    MergeFrom(*source);
  }
}

void CustomMessage::MergeFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.CustomMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void CustomMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomMessage::CopyFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomMessage::IsInitialized() const {
  return true;
}

void CustomMessage::InternalSwap(CustomMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ToServerUnion::InitAsDefaultInstance() {
  ::Jde::Logging::Proto::_ToServerUnion_default_instance_.instance_ = const_cast< ::Jde::Logging::Proto::Instance*>(
      ::Jde::Logging::Proto::Instance::internal_default_instance());
  ::Jde::Logging::Proto::_ToServerUnion_default_instance_.message_ = const_cast< ::Jde::Logging::Proto::Message*>(
      ::Jde::Logging::Proto::Message::internal_default_instance());
  ::Jde::Logging::Proto::_ToServerUnion_default_instance_.string_ = const_cast< ::Jde::Logging::Proto::RequestString*>(
      ::Jde::Logging::Proto::RequestString::internal_default_instance());
  ::Jde::Logging::Proto::_ToServerUnion_default_instance_.status_ = const_cast< ::Jde::Logging::Proto::Status*>(
      ::Jde::Logging::Proto::Status::internal_default_instance());
  ::Jde::Logging::Proto::_ToServerUnion_default_instance_.custom_ = const_cast< ::Jde::Logging::Proto::CustomMessage*>(
      ::Jde::Logging::Proto::CustomMessage::internal_default_instance());
}
class ToServerUnion::_Internal {
 public:
  static const ::Jde::Logging::Proto::Instance& instance(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::Message& message(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::RequestString& string(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::Status& status(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::CustomMessage& custom(const ToServerUnion* msg);
};

const ::Jde::Logging::Proto::Instance&
ToServerUnion::_Internal::instance(const ToServerUnion* msg) {
  return *msg->Value_.instance_;
}
const ::Jde::Logging::Proto::Message&
ToServerUnion::_Internal::message(const ToServerUnion* msg) {
  return *msg->Value_.message_;
}
const ::Jde::Logging::Proto::RequestString&
ToServerUnion::_Internal::string(const ToServerUnion* msg) {
  return *msg->Value_.string_;
}
const ::Jde::Logging::Proto::Status&
ToServerUnion::_Internal::status(const ToServerUnion* msg) {
  return *msg->Value_.status_;
}
const ::Jde::Logging::Proto::CustomMessage&
ToServerUnion::_Internal::custom(const ToServerUnion* msg) {
  return *msg->Value_.custom_;
}
void ToServerUnion::set_allocated_instance(::Jde::Logging::Proto::Instance* instance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (instance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      instance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, instance, submessage_arena);
    }
    set_has_instance();
    Value_.instance_ = instance;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Instance)
}
void ToServerUnion::set_allocated_message(::Jde::Logging::Proto::Message* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    Value_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Message)
}
void ToServerUnion::set_allocated_string(::Jde::Logging::Proto::RequestString* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    Value_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.String)
}
void ToServerUnion::set_allocated_status(::Jde::Logging::Proto::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    set_has_status();
    Value_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Status)
}
void ToServerUnion::set_allocated_custom(::Jde::Logging::Proto::CustomMessage* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    Value_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Custom)
}
ToServerUnion::ToServerUnion()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.ToServerUnion)
}
ToServerUnion::ToServerUnion(const ToServerUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kInstance: {
      _internal_mutable_instance()->::Jde::Logging::Proto::Instance::MergeFrom(from._internal_instance());
      break;
    }
    case kMessage: {
      _internal_mutable_message()->::Jde::Logging::Proto::Message::MergeFrom(from._internal_message());
      break;
    }
    case kString: {
      _internal_mutable_string()->::Jde::Logging::Proto::RequestString::MergeFrom(from._internal_string());
      break;
    }
    case kStatus: {
      _internal_mutable_status()->::Jde::Logging::Proto::Status::MergeFrom(from._internal_status());
      break;
    }
    case kCustom: {
      _internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(from._internal_custom());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.ToServerUnion)
}

void ToServerUnion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ToServerUnion_messages_2eproto.base);
  clear_has_Value();
}

ToServerUnion::~ToServerUnion() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.ToServerUnion)
  SharedDtor();
}

void ToServerUnion::SharedDtor() {
  if (has_Value()) {
    clear_Value();
  }
}

void ToServerUnion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ToServerUnion& ToServerUnion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ToServerUnion_messages_2eproto.base);
  return *internal_default_instance();
}


void ToServerUnion::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Logging.Proto.ToServerUnion)
  switch (Value_case()) {
    case kInstance: {
      delete Value_.instance_;
      break;
    }
    case kMessage: {
      delete Value_.message_;
      break;
    }
    case kString: {
      delete Value_.string_;
      break;
    }
    case kStatus: {
      delete Value_.status_;
      break;
    }
    case kCustom: {
      delete Value_.custom_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ToServerUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.ToServerUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear();
}

const char* ToServerUnion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.Instance Instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_instance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Message Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.RequestString String = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Status Status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.CustomMessage Custom = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ToServerUnion::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.ToServerUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.Instance Instance = 1;
  if (_internal_has_instance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::instance(this), target, stream);
  }

  // .Jde.Logging.Proto.Message Message = 2;
  if (_internal_has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::message(this), target, stream);
  }

  // .Jde.Logging.Proto.RequestString String = 3;
  if (_internal_has_string()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::string(this), target, stream);
  }

  // .Jde.Logging.Proto.Status Status = 4;
  if (_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::status(this), target, stream);
  }

  // .Jde.Logging.Proto.CustomMessage Custom = 5;
  if (_internal_has_custom()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::custom(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.ToServerUnion)
  return target;
}

size_t ToServerUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.ToServerUnion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // .Jde.Logging.Proto.Instance Instance = 1;
    case kInstance: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.instance_);
      break;
    }
    // .Jde.Logging.Proto.Message Message = 2;
    case kMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.message_);
      break;
    }
    // .Jde.Logging.Proto.RequestString String = 3;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.string_);
      break;
    }
    // .Jde.Logging.Proto.Status Status = 4;
    case kStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.status_);
      break;
    }
    // .Jde.Logging.Proto.CustomMessage Custom = 5;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.custom_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToServerUnion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.ToServerUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const ToServerUnion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ToServerUnion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.ToServerUnion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.ToServerUnion)
    MergeFrom(*source);
  }
}

void ToServerUnion::MergeFrom(const ToServerUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.ToServerUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kInstance: {
      _internal_mutable_instance()->::Jde::Logging::Proto::Instance::MergeFrom(from._internal_instance());
      break;
    }
    case kMessage: {
      _internal_mutable_message()->::Jde::Logging::Proto::Message::MergeFrom(from._internal_message());
      break;
    }
    case kString: {
      _internal_mutable_string()->::Jde::Logging::Proto::RequestString::MergeFrom(from._internal_string());
      break;
    }
    case kStatus: {
      _internal_mutable_status()->::Jde::Logging::Proto::Status::MergeFrom(from._internal_status());
      break;
    }
    case kCustom: {
      _internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(from._internal_custom());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ToServerUnion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.ToServerUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToServerUnion::CopyFrom(const ToServerUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.ToServerUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToServerUnion::IsInitialized() const {
  return true;
}

void ToServerUnion::InternalSwap(ToServerUnion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(Value_, other->Value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToServerUnion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ToServer::InitAsDefaultInstance() {
}
class ToServer::_Internal {
 public:
};

ToServer::ToServer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.ToServer)
}
ToServer::ToServer(const ToServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.ToServer)
}

void ToServer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ToServer_messages_2eproto.base);
}

ToServer::~ToServer() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.ToServer)
  SharedDtor();
}

void ToServer::SharedDtor() {
}

void ToServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ToServer& ToServer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ToServer_messages_2eproto.base);
  return *internal_default_instance();
}


void ToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.ToServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

const char* ToServer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ToServer::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.ToServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_messages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.ToServer)
  return target;
}

size_t ToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.ToServer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToServer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.ToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const ToServer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ToServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.ToServer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.ToServer)
    MergeFrom(*source);
  }
}

void ToServer::MergeFrom(const ToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.ToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void ToServer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.ToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToServer::CopyFrom(const ToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.ToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToServer::IsInitialized() const {
  return true;
}

void ToServer::InternalSwap(ToServer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToServer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Acknowledgement::InitAsDefaultInstance() {
}
class Acknowledgement::_Internal {
 public:
};

Acknowledgement::Acknowledgement()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.Acknowledgement)
}
Acknowledgement::Acknowledgement(const Acknowledgement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instanceid_ = from.instanceid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Acknowledgement)
}

void Acknowledgement::SharedCtor() {
  instanceid_ = 0u;
}

Acknowledgement::~Acknowledgement() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Acknowledgement)
  SharedDtor();
}

void Acknowledgement::SharedDtor() {
}

void Acknowledgement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Acknowledgement& Acknowledgement::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Acknowledgement_messages_2eproto.base);
  return *internal_default_instance();
}


void Acknowledgement::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Acknowledgement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instanceid_ = 0u;
  _internal_metadata_.Clear();
}

const char* Acknowledgement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 InstanceId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Acknowledgement::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Acknowledgement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 InstanceId = 1;
  if (this->instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Acknowledgement)
  return target;
}

size_t Acknowledgement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Acknowledgement)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 InstanceId = 1;
  if (this->instanceid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_instanceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Acknowledgement::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.Acknowledgement)
  GOOGLE_DCHECK_NE(&from, this);
  const Acknowledgement* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Acknowledgement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.Acknowledgement)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.Acknowledgement)
    MergeFrom(*source);
  }
}

void Acknowledgement::MergeFrom(const Acknowledgement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Acknowledgement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instanceid() != 0) {
    _internal_set_instanceid(from._internal_instanceid());
  }
}

void Acknowledgement::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.Acknowledgement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acknowledgement::CopyFrom(const Acknowledgement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Acknowledgement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acknowledgement::IsInitialized() const {
  return true;
}

void Acknowledgement::InternalSwap(Acknowledgement* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Acknowledgement::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenericFromServer::InitAsDefaultInstance() {
}
class GenericFromServer::_Internal {
 public:
};

GenericFromServer::GenericFromServer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.GenericFromServer)
}
GenericFromServer::GenericFromServer(const GenericFromServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  what_ = from.what_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.GenericFromServer)
}

void GenericFromServer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenericFromServer_messages_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  what_ = 0;
}

GenericFromServer::~GenericFromServer() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.GenericFromServer)
  SharedDtor();
}

void GenericFromServer::SharedDtor() {
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenericFromServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenericFromServer& GenericFromServer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenericFromServer_messages_2eproto.base);
  return *internal_default_instance();
}


void GenericFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.GenericFromServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  what_ = 0;
  _internal_metadata_.Clear();
}

const char* GenericFromServer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.EFromServer What = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_what(static_cast<::Jde::Logging::Proto::EFromServer>(val));
        } else goto handle_unusual;
        continue;
      // string Description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_description(), ptr, ctx, "Jde.Logging.Proto.GenericFromServer.Description");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenericFromServer::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.GenericFromServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.EFromServer What = 1;
  if (this->what() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_what(), target);
  }

  // string Description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.GenericFromServer.Description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.GenericFromServer)
  return target;
}

size_t GenericFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.GenericFromServer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .Jde.Logging.Proto.EFromServer What = 1;
  if (this->what() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_what());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericFromServer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.GenericFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericFromServer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenericFromServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.GenericFromServer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.GenericFromServer)
    MergeFrom(*source);
  }
}

void GenericFromServer::MergeFrom(const GenericFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.GenericFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.what() != 0) {
    _internal_set_what(from._internal_what());
  }
}

void GenericFromServer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.GenericFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericFromServer::CopyFrom(const GenericFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.GenericFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericFromServer::IsInitialized() const {
  return true;
}

void GenericFromServer::InternalSwap(GenericFromServer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(what_, other->what_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenericFromServer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Strings::InitAsDefaultInstance() {
}
class Strings::_Internal {
 public:
};

Strings::Strings()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.Strings)
}
Strings::Strings(const Strings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_),
      files_(from.files_),
      functions_(from.functions_),
      threads_(from.threads_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Strings)
}

void Strings::SharedCtor() {
}

Strings::~Strings() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Strings)
  SharedDtor();
}

void Strings::SharedDtor() {
}

void Strings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Strings& Strings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Strings_messages_2eproto.base);
  return *internal_default_instance();
}


void Strings::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Strings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  files_.Clear();
  functions_.Clear();
  threads_.Clear();
  _internal_metadata_.Clear();
}

const char* Strings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_messages(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_messages(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 Files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_files(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_files(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 Functions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_functions(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_functions(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 Threads = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_threads(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_threads(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Strings::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Strings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 Messages = 1;
  {
    int byte_size = _messages_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_messages(), byte_size, target);
    }
  }

  // repeated uint32 Files = 2;
  {
    int byte_size = _files_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_files(), byte_size, target);
    }
  }

  // repeated uint32 Functions = 3;
  {
    int byte_size = _functions_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_functions(), byte_size, target);
    }
  }

  // repeated uint32 Threads = 4;
  {
    int byte_size = _threads_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_threads(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Strings)
  return target;
}

size_t Strings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Strings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 Messages = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->messages_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _messages_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 Files = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->files_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _files_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 Functions = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->functions_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _functions_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 Threads = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->threads_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _threads_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Strings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.Strings)
  GOOGLE_DCHECK_NE(&from, this);
  const Strings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Strings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.Strings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.Strings)
    MergeFrom(*source);
  }
}

void Strings::MergeFrom(const Strings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Strings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  files_.MergeFrom(from.files_);
  functions_.MergeFrom(from.functions_);
  threads_.MergeFrom(from.threads_);
}

void Strings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.Strings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Strings::CopyFrom(const Strings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Strings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Strings::IsInitialized() const {
  return true;
}

void Strings::InternalSwap(Strings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
  files_.InternalSwap(&other->files_);
  functions_.InternalSwap(&other->functions_);
  threads_.InternalSwap(&other->threads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Strings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogLevels::InitAsDefaultInstance() {
}
class LogLevels::_Internal {
 public:
};

LogLevels::LogLevels()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.LogLevels)
}
LogLevels::LogLevels(const LogLevels& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_, &from.server_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_) -
    reinterpret_cast<char*>(&server_)) + sizeof(client_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.LogLevels)
}

void LogLevels::SharedCtor() {
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_) -
      reinterpret_cast<char*>(&server_)) + sizeof(client_));
}

LogLevels::~LogLevels() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.LogLevels)
  SharedDtor();
}

void LogLevels::SharedDtor() {
}

void LogLevels::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogLevels& LogLevels::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogLevels_messages_2eproto.base);
  return *internal_default_instance();
}


void LogLevels::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.LogLevels)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_) -
      reinterpret_cast<char*>(&server_)) + sizeof(client_));
  _internal_metadata_.Clear();
}

const char* LogLevels::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.ELogLevel Server = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_server(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel Client = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_client(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogLevels::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.LogLevels)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.ELogLevel Server = 1;
  if (this->server() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_server(), target);
  }

  // .Jde.Logging.Proto.ELogLevel Client = 2;
  if (this->client() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_client(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.LogLevels)
  return target;
}

size_t LogLevels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.LogLevels)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Jde.Logging.Proto.ELogLevel Server = 1;
  if (this->server() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_server());
  }

  // .Jde.Logging.Proto.ELogLevel Client = 2;
  if (this->client() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_client());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogLevels::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.LogLevels)
  GOOGLE_DCHECK_NE(&from, this);
  const LogLevels* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogLevels>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.LogLevels)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.LogLevels)
    MergeFrom(*source);
  }
}

void LogLevels::MergeFrom(const LogLevels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.LogLevels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server() != 0) {
    _internal_set_server(from._internal_server());
  }
  if (from.client() != 0) {
    _internal_set_client(from._internal_client());
  }
}

void LogLevels::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.LogLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogLevels::CopyFrom(const LogLevels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.LogLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogLevels::IsInitialized() const {
  return true;
}

void LogLevels::InternalSwap(LogLevels* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(server_, other->server_);
  swap(client_, other->client_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogLevels::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FromServerUnion::InitAsDefaultInstance() {
  ::Jde::Logging::Proto::_FromServerUnion_default_instance_.acknowledgement_ = const_cast< ::Jde::Logging::Proto::Acknowledgement*>(
      ::Jde::Logging::Proto::Acknowledgement::internal_default_instance());
  ::Jde::Logging::Proto::_FromServerUnion_default_instance_.generic_ = const_cast< ::Jde::Logging::Proto::GenericFromServer*>(
      ::Jde::Logging::Proto::GenericFromServer::internal_default_instance());
  ::Jde::Logging::Proto::_FromServerUnion_default_instance_.strings_ = const_cast< ::Jde::Logging::Proto::Strings*>(
      ::Jde::Logging::Proto::Strings::internal_default_instance());
  ::Jde::Logging::Proto::_FromServerUnion_default_instance_.loglevels_ = const_cast< ::Jde::Logging::Proto::LogLevels*>(
      ::Jde::Logging::Proto::LogLevels::internal_default_instance());
  ::Jde::Logging::Proto::_FromServerUnion_default_instance_.custom_ = const_cast< ::Jde::Logging::Proto::CustomMessage*>(
      ::Jde::Logging::Proto::CustomMessage::internal_default_instance());
}
class FromServerUnion::_Internal {
 public:
  static const ::Jde::Logging::Proto::Acknowledgement& acknowledgement(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::GenericFromServer& generic(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::Strings& strings(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::LogLevels& loglevels(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::CustomMessage& custom(const FromServerUnion* msg);
};

const ::Jde::Logging::Proto::Acknowledgement&
FromServerUnion::_Internal::acknowledgement(const FromServerUnion* msg) {
  return *msg->Value_.acknowledgement_;
}
const ::Jde::Logging::Proto::GenericFromServer&
FromServerUnion::_Internal::generic(const FromServerUnion* msg) {
  return *msg->Value_.generic_;
}
const ::Jde::Logging::Proto::Strings&
FromServerUnion::_Internal::strings(const FromServerUnion* msg) {
  return *msg->Value_.strings_;
}
const ::Jde::Logging::Proto::LogLevels&
FromServerUnion::_Internal::loglevels(const FromServerUnion* msg) {
  return *msg->Value_.loglevels_;
}
const ::Jde::Logging::Proto::CustomMessage&
FromServerUnion::_Internal::custom(const FromServerUnion* msg) {
  return *msg->Value_.custom_;
}
void FromServerUnion::set_allocated_acknowledgement(::Jde::Logging::Proto::Acknowledgement* acknowledgement) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (acknowledgement) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      acknowledgement = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acknowledgement, submessage_arena);
    }
    set_has_acknowledgement();
    Value_.acknowledgement_ = acknowledgement;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Acknowledgement)
}
void FromServerUnion::set_allocated_generic(::Jde::Logging::Proto::GenericFromServer* generic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (generic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      generic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generic, submessage_arena);
    }
    set_has_generic();
    Value_.generic_ = generic;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Generic)
}
void FromServerUnion::set_allocated_strings(::Jde::Logging::Proto::Strings* strings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (strings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      strings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, strings, submessage_arena);
    }
    set_has_strings();
    Value_.strings_ = strings;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Strings)
}
void FromServerUnion::set_allocated_loglevels(::Jde::Logging::Proto::LogLevels* loglevels) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (loglevels) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loglevels = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loglevels, submessage_arena);
    }
    set_has_loglevels();
    Value_.loglevels_ = loglevels;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.LogLevels)
}
void FromServerUnion::set_allocated_custom(::Jde::Logging::Proto::CustomMessage* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    Value_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Custom)
}
FromServerUnion::FromServerUnion()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.FromServerUnion)
}
FromServerUnion::FromServerUnion(const FromServerUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kAcknowledgement: {
      _internal_mutable_acknowledgement()->::Jde::Logging::Proto::Acknowledgement::MergeFrom(from._internal_acknowledgement());
      break;
    }
    case kGeneric: {
      _internal_mutable_generic()->::Jde::Logging::Proto::GenericFromServer::MergeFrom(from._internal_generic());
      break;
    }
    case kStrings: {
      _internal_mutable_strings()->::Jde::Logging::Proto::Strings::MergeFrom(from._internal_strings());
      break;
    }
    case kLogLevels: {
      _internal_mutable_loglevels()->::Jde::Logging::Proto::LogLevels::MergeFrom(from._internal_loglevels());
      break;
    }
    case kCustom: {
      _internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(from._internal_custom());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.FromServerUnion)
}

void FromServerUnion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FromServerUnion_messages_2eproto.base);
  clear_has_Value();
}

FromServerUnion::~FromServerUnion() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.FromServerUnion)
  SharedDtor();
}

void FromServerUnion::SharedDtor() {
  if (has_Value()) {
    clear_Value();
  }
}

void FromServerUnion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FromServerUnion& FromServerUnion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FromServerUnion_messages_2eproto.base);
  return *internal_default_instance();
}


void FromServerUnion::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Logging.Proto.FromServerUnion)
  switch (Value_case()) {
    case kAcknowledgement: {
      delete Value_.acknowledgement_;
      break;
    }
    case kGeneric: {
      delete Value_.generic_;
      break;
    }
    case kStrings: {
      delete Value_.strings_;
      break;
    }
    case kLogLevels: {
      delete Value_.loglevels_;
      break;
    }
    case kCustom: {
      delete Value_.custom_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void FromServerUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.FromServerUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear();
}

const char* FromServerUnion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_acknowledgement(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.GenericFromServer Generic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generic(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Strings Strings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_strings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.LogLevels LogLevels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_loglevels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.CustomMessage Custom = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FromServerUnion::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.FromServerUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
  if (_internal_has_acknowledgement()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::acknowledgement(this), target, stream);
  }

  // .Jde.Logging.Proto.GenericFromServer Generic = 2;
  if (_internal_has_generic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::generic(this), target, stream);
  }

  // .Jde.Logging.Proto.Strings Strings = 3;
  if (_internal_has_strings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::strings(this), target, stream);
  }

  // .Jde.Logging.Proto.LogLevels LogLevels = 4;
  if (_internal_has_loglevels()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::loglevels(this), target, stream);
  }

  // .Jde.Logging.Proto.CustomMessage Custom = 5;
  if (_internal_has_custom()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::custom(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.FromServerUnion)
  return target;
}

size_t FromServerUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.FromServerUnion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
    case kAcknowledgement: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.acknowledgement_);
      break;
    }
    // .Jde.Logging.Proto.GenericFromServer Generic = 2;
    case kGeneric: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.generic_);
      break;
    }
    // .Jde.Logging.Proto.Strings Strings = 3;
    case kStrings: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.strings_);
      break;
    }
    // .Jde.Logging.Proto.LogLevels LogLevels = 4;
    case kLogLevels: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.loglevels_);
      break;
    }
    // .Jde.Logging.Proto.CustomMessage Custom = 5;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.custom_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FromServerUnion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.FromServerUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const FromServerUnion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FromServerUnion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.FromServerUnion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.FromServerUnion)
    MergeFrom(*source);
  }
}

void FromServerUnion::MergeFrom(const FromServerUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.FromServerUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kAcknowledgement: {
      _internal_mutable_acknowledgement()->::Jde::Logging::Proto::Acknowledgement::MergeFrom(from._internal_acknowledgement());
      break;
    }
    case kGeneric: {
      _internal_mutable_generic()->::Jde::Logging::Proto::GenericFromServer::MergeFrom(from._internal_generic());
      break;
    }
    case kStrings: {
      _internal_mutable_strings()->::Jde::Logging::Proto::Strings::MergeFrom(from._internal_strings());
      break;
    }
    case kLogLevels: {
      _internal_mutable_loglevels()->::Jde::Logging::Proto::LogLevels::MergeFrom(from._internal_loglevels());
      break;
    }
    case kCustom: {
      _internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(from._internal_custom());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void FromServerUnion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.FromServerUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromServerUnion::CopyFrom(const FromServerUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.FromServerUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromServerUnion::IsInitialized() const {
  return true;
}

void FromServerUnion::InternalSwap(FromServerUnion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(Value_, other->Value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FromServerUnion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FromServer::InitAsDefaultInstance() {
}
class FromServer::_Internal {
 public:
};

FromServer::FromServer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Logging.Proto.FromServer)
}
FromServer::FromServer(const FromServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.FromServer)
}

void FromServer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FromServer_messages_2eproto.base);
}

FromServer::~FromServer() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.FromServer)
  SharedDtor();
}

void FromServer::SharedDtor() {
}

void FromServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FromServer& FromServer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FromServer_messages_2eproto.base);
  return *internal_default_instance();
}


void FromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.FromServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

const char* FromServer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FromServer::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.FromServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_messages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.FromServer)
  return target;
}

size_t FromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.FromServer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FromServer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Logging.Proto.FromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const FromServer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FromServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Logging.Proto.FromServer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Logging.Proto.FromServer)
    MergeFrom(*source);
  }
}

void FromServer::MergeFrom(const FromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.FromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void FromServer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Logging.Proto.FromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromServer::CopyFrom(const FromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.FromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromServer::IsInitialized() const {
  return true;
}

void FromServer::InternalSwap(FromServer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FromServer::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Logging
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Instance* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Instance >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::Instance >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Message* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Message >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::Message >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::RequestString* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::RequestString >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::RequestString >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Status* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Status >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::CustomMessage* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::CustomMessage >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::CustomMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::ToServerUnion* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::ToServerUnion >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::ToServerUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::ToServer* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::ToServer >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::ToServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Acknowledgement* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Acknowledgement >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::Acknowledgement >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::GenericFromServer* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::GenericFromServer >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::GenericFromServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Strings* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Strings >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::Strings >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::LogLevels* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::LogLevels >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::LogLevels >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::FromServerUnion* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::FromServerUnion >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::FromServerUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::FromServer* Arena::CreateMaybeMessage< ::Jde::Logging::Proto::FromServer >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Logging::Proto::FromServer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
