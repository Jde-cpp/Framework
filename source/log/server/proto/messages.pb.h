// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_messages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_messages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messages_2eproto JDE_NATIVE_VISIBILITY
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct JDE_NATIVE_VISIBILITY TableStruct_messages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern JDE_NATIVE_VISIBILITY const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_2eproto;
namespace Jde {
namespace Logging {
namespace Proto {
class Acknowledgement;
class AcknowledgementDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern AcknowledgementDefaultTypeInternal _Acknowledgement_default_instance_;
class CustomMessage;
class CustomMessageDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern CustomMessageDefaultTypeInternal _CustomMessage_default_instance_;
class FromServer;
class FromServerDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern FromServerDefaultTypeInternal _FromServer_default_instance_;
class FromServerUnion;
class FromServerUnionDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern FromServerUnionDefaultTypeInternal _FromServerUnion_default_instance_;
class GenericFromServer;
class GenericFromServerDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern GenericFromServerDefaultTypeInternal _GenericFromServer_default_instance_;
class Instance;
class InstanceDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern InstanceDefaultTypeInternal _Instance_default_instance_;
class LogLevels;
class LogLevelsDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern LogLevelsDefaultTypeInternal _LogLevels_default_instance_;
class Message;
class MessageDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern MessageDefaultTypeInternal _Message_default_instance_;
class RequestString;
class RequestStringDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern RequestStringDefaultTypeInternal _RequestString_default_instance_;
class Status;
class StatusDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern StatusDefaultTypeInternal _Status_default_instance_;
class Strings;
class StringsDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern StringsDefaultTypeInternal _Strings_default_instance_;
class ToServer;
class ToServerDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern ToServerDefaultTypeInternal _ToServer_default_instance_;
class ToServerUnion;
class ToServerUnionDefaultTypeInternal;
JDE_NATIVE_VISIBILITY extern ToServerUnionDefaultTypeInternal _ToServerUnion_default_instance_;
}  // namespace Proto
}  // namespace Logging
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::Acknowledgement* Arena::CreateMaybeMessage<::Jde::Logging::Proto::Acknowledgement>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::CustomMessage* Arena::CreateMaybeMessage<::Jde::Logging::Proto::CustomMessage>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::FromServer* Arena::CreateMaybeMessage<::Jde::Logging::Proto::FromServer>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::FromServerUnion* Arena::CreateMaybeMessage<::Jde::Logging::Proto::FromServerUnion>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::GenericFromServer* Arena::CreateMaybeMessage<::Jde::Logging::Proto::GenericFromServer>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::Instance* Arena::CreateMaybeMessage<::Jde::Logging::Proto::Instance>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::LogLevels* Arena::CreateMaybeMessage<::Jde::Logging::Proto::LogLevels>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::Message* Arena::CreateMaybeMessage<::Jde::Logging::Proto::Message>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::RequestString* Arena::CreateMaybeMessage<::Jde::Logging::Proto::RequestString>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::Status* Arena::CreateMaybeMessage<::Jde::Logging::Proto::Status>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::Strings* Arena::CreateMaybeMessage<::Jde::Logging::Proto::Strings>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::ToServer* Arena::CreateMaybeMessage<::Jde::Logging::Proto::ToServer>(Arena*);
template<> JDE_NATIVE_VISIBILITY ::Jde::Logging::Proto::ToServerUnion* Arena::CreateMaybeMessage<::Jde::Logging::Proto::ToServerUnion>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Jde {
namespace Logging {
namespace Proto {

enum ELogLevel : int {
  Trace = 0,
  Debug = 1,
  Information = 2,
  Warning = 3,
  Error = 4,
  Critical = 5,
  LogLevelNone = 6,
  ELogLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ELogLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_NATIVE_VISIBILITY bool ELogLevel_IsValid(int value);
constexpr ELogLevel ELogLevel_MIN = Trace;
constexpr ELogLevel ELogLevel_MAX = LogLevelNone;
constexpr int ELogLevel_ARRAYSIZE = ELogLevel_MAX + 1;

JDE_NATIVE_VISIBILITY const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELogLevel_descriptor();
template<typename T>
inline const std::string& ELogLevel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELogLevel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELogLevel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELogLevel_descriptor(), enum_t_value);
}
inline bool ELogLevel_Parse(
    const std::string& name, ELogLevel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELogLevel>(
    ELogLevel_descriptor(), name, value);
}
enum EFields : int {
  FieldsNone = 0,
  TimestampField = 1,
  MessageId = 2,
  MessageField = 4,
  Level = 8,
  FileId = 16,
  File = 32,
  FunctionId = 64,
  Function = 128,
  LineNumber = 256,
  UserId = 512,
  User = 1024,
  ThreadId = 2048,
  Thread = 4096,
  VariableCount = 8192,
  SessionId = 16384,
  EFields_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EFields_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_NATIVE_VISIBILITY bool EFields_IsValid(int value);
constexpr EFields EFields_MIN = FieldsNone;
constexpr EFields EFields_MAX = SessionId;
constexpr int EFields_ARRAYSIZE = EFields_MAX + 1;

JDE_NATIVE_VISIBILITY const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFields_descriptor();
template<typename T>
inline const std::string& EFields_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EFields>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EFields_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EFields_descriptor(), enum_t_value);
}
inline bool EFields_Parse(
    const std::string& name, EFields* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EFields>(
    EFields_descriptor(), name, value);
}
enum EFromServer : int {
  Ping = 0,
  Error_ = 1,
  ReadError = 2,
  EFromServer_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EFromServer_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_NATIVE_VISIBILITY bool EFromServer_IsValid(int value);
constexpr EFromServer EFromServer_MIN = Ping;
constexpr EFromServer EFromServer_MAX = ReadError;
constexpr int EFromServer_ARRAYSIZE = EFromServer_MAX + 1;

JDE_NATIVE_VISIBILITY const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFromServer_descriptor();
template<typename T>
inline const std::string& EFromServer_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EFromServer>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EFromServer_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EFromServer_descriptor(), enum_t_value);
}
inline bool EFromServer_Parse(
    const std::string& name, EFromServer* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EFromServer>(
    EFromServer_descriptor(), name, value);
}
// ===================================================================

class JDE_NATIVE_VISIBILITY Instance :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.Instance) */ {
 public:
  Instance();
  virtual ~Instance();

  Instance(const Instance& from);
  Instance(Instance&& from) noexcept
    : Instance() {
    *this = ::std::move(from);
  }

  inline Instance& operator=(const Instance& from) {
    CopyFrom(from);
    return *this;
  }
  inline Instance& operator=(Instance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Instance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Instance* internal_default_instance() {
    return reinterpret_cast<const Instance*>(
               &_Instance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Instance& a, Instance& b) {
    a.Swap(&b);
  }
  inline void Swap(Instance* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Instance* New() const final {
    return CreateMaybeMessage<Instance>(nullptr);
  }

  Instance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Instance>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Instance& from);
  void MergeFrom(const Instance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Instance* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.Instance";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplicationNameFieldNumber = 1,
    kHostNameFieldNumber = 2,
    kProcessIdFieldNumber = 3,
    kStartTimeFieldNumber = 5,
  };
  // string ApplicationName = 1;
  void clear_applicationname();
  const std::string& applicationname() const;
  void set_applicationname(const std::string& value);
  void set_applicationname(std::string&& value);
  void set_applicationname(const char* value);
  void set_applicationname(const char* value, size_t size);
  std::string* mutable_applicationname();
  std::string* release_applicationname();
  void set_allocated_applicationname(std::string* applicationname);
  private:
  const std::string& _internal_applicationname() const;
  void _internal_set_applicationname(const std::string& value);
  std::string* _internal_mutable_applicationname();
  public:

  // string HostName = 2;
  void clear_hostname();
  const std::string& hostname() const;
  void set_hostname(const std::string& value);
  void set_hostname(std::string&& value);
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  std::string* mutable_hostname();
  std::string* release_hostname();
  void set_allocated_hostname(std::string* hostname);
  private:
  const std::string& _internal_hostname() const;
  void _internal_set_hostname(const std::string& value);
  std::string* _internal_mutable_hostname();
  public:

  // int32 ProcessId = 3;
  void clear_processid();
  ::PROTOBUF_NAMESPACE_ID::int32 processid() const;
  void set_processid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_processid() const;
  void _internal_set_processid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 StartTime = 5;
  void clear_starttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 starttime() const;
  void set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_starttime() const;
  void _internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.Instance)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr applicationname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hostname_;
  ::PROTOBUF_NAMESPACE_ID::int32 processid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 starttime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY Message :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }
  inline void Swap(Message* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(nullptr);
  }

  Message* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.Message";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariablesFieldNumber = 9,
    kTimeFieldNumber = 1,
    kLevelFieldNumber = 2,
    kMessageIdFieldNumber = 3,
    kFileIdFieldNumber = 4,
    kFunctionIdFieldNumber = 5,
    kLineNumberFieldNumber = 6,
    kUserIdFieldNumber = 7,
    kThreadIdFieldNumber = 8,
  };
  // repeated string Variables = 9;
  int variables_size() const;
  private:
  int _internal_variables_size() const;
  public:
  void clear_variables();
  const std::string& variables(int index) const;
  std::string* mutable_variables(int index);
  void set_variables(int index, const std::string& value);
  void set_variables(int index, std::string&& value);
  void set_variables(int index, const char* value);
  void set_variables(int index, const char* value, size_t size);
  std::string* add_variables();
  void add_variables(const std::string& value);
  void add_variables(std::string&& value);
  void add_variables(const char* value);
  void add_variables(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& variables() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_variables();
  private:
  const std::string& _internal_variables(int index) const;
  std::string* _internal_add_variables();
  public:

  // .google.protobuf.Timestamp Time = 1;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_time();
  void set_allocated_time(PROTOBUF_NAMESPACE_ID::Timestamp* time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_time();
  public:

  // .Jde.Logging.Proto.ELogLevel Level = 2;
  void clear_level();
  ::Jde::Logging::Proto::ELogLevel level() const;
  void set_level(::Jde::Logging::Proto::ELogLevel value);
  private:
  ::Jde::Logging::Proto::ELogLevel _internal_level() const;
  void _internal_set_level(::Jde::Logging::Proto::ELogLevel value);
  public:

  // uint32 MessageId = 3;
  void clear_messageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 messageid() const;
  void set_messageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_messageid() const;
  void _internal_set_messageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FileId = 4;
  void clear_fileid();
  ::PROTOBUF_NAMESPACE_ID::uint32 fileid() const;
  void set_fileid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fileid() const;
  void _internal_set_fileid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 FunctionId = 5;
  void clear_functionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 functionid() const;
  void set_functionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functionid() const;
  void _internal_set_functionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 LineNumber = 6;
  void clear_linenumber();
  ::PROTOBUF_NAMESPACE_ID::uint32 linenumber() const;
  void set_linenumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_linenumber() const;
  void _internal_set_linenumber(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 UserId = 7;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 ThreadId = 8;
  void clear_threadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid() const;
  void set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_threadid() const;
  void _internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.Message)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> variables_;
  PROTOBUF_NAMESPACE_ID::Timestamp* time_;
  int level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 messageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fileid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 functionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 linenumber_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 threadid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY RequestString :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.RequestString) */ {
 public:
  RequestString();
  virtual ~RequestString();

  RequestString(const RequestString& from);
  RequestString(RequestString&& from) noexcept
    : RequestString() {
    *this = ::std::move(from);
  }

  inline RequestString& operator=(const RequestString& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestString& operator=(RequestString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RequestString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestString* internal_default_instance() {
    return reinterpret_cast<const RequestString*>(
               &_RequestString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RequestString& a, RequestString& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestString* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestString* New() const final {
    return CreateMaybeMessage<RequestString>(nullptr);
  }

  RequestString* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestString>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestString& from);
  void MergeFrom(const RequestString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestString* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.RequestString";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 3,
    kFieldFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // string Value = 3;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // .Jde.Logging.Proto.EFields Field = 1;
  void clear_field();
  ::Jde::Logging::Proto::EFields field() const;
  void set_field(::Jde::Logging::Proto::EFields value);
  private:
  ::Jde::Logging::Proto::EFields _internal_field() const;
  void _internal_set_field(::Jde::Logging::Proto::EFields value);
  public:

  // uint32 Id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.RequestString)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  int field_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY Status :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.Status) */ {
 public:
  Status();
  virtual ~Status();

  Status(const Status& from);
  Status(Status&& from) noexcept
    : Status() {
    *this = ::std::move(from);
  }

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }
  inline Status& operator=(Status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Status* internal_default_instance() {
    return reinterpret_cast<const Status*>(
               &_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Status& a, Status& b) {
    a.Swap(&b);
  }
  inline void Swap(Status* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Status* New() const final {
    return CreateMaybeMessage<Status>(nullptr);
  }

  Status* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Status>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Status& from);
  void MergeFrom(const Status& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Status* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.Status";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetailsFieldNumber = 5,
    kMemoryFieldNumber = 2,
    kStartTimeFieldNumber = 1,
    kServerLogLevelFieldNumber = 3,
    kClientLogLevelFieldNumber = 4,
  };
  // repeated string Details = 5;
  int details_size() const;
  private:
  int _internal_details_size() const;
  public:
  void clear_details();
  const std::string& details(int index) const;
  std::string* mutable_details(int index);
  void set_details(int index, const std::string& value);
  void set_details(int index, std::string&& value);
  void set_details(int index, const char* value);
  void set_details(int index, const char* value, size_t size);
  std::string* add_details();
  void add_details(const std::string& value);
  void add_details(std::string&& value);
  void add_details(const char* value);
  void add_details(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& details() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_details();
  private:
  const std::string& _internal_details(int index) const;
  std::string* _internal_add_details();
  public:

  // uint64 Memory = 2;
  void clear_memory();
  ::PROTOBUF_NAMESPACE_ID::uint64 memory() const;
  void set_memory(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_memory() const;
  void _internal_set_memory(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 StartTime = 1;
  void clear_starttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 starttime() const;
  void set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_starttime() const;
  void _internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
  void clear_serverloglevel();
  ::Jde::Logging::Proto::ELogLevel serverloglevel() const;
  void set_serverloglevel(::Jde::Logging::Proto::ELogLevel value);
  private:
  ::Jde::Logging::Proto::ELogLevel _internal_serverloglevel() const;
  void _internal_set_serverloglevel(::Jde::Logging::Proto::ELogLevel value);
  public:

  // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
  void clear_clientloglevel();
  ::Jde::Logging::Proto::ELogLevel clientloglevel() const;
  void set_clientloglevel(::Jde::Logging::Proto::ELogLevel value);
  private:
  ::Jde::Logging::Proto::ELogLevel _internal_clientloglevel() const;
  void _internal_set_clientloglevel(::Jde::Logging::Proto::ELogLevel value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.Status)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> details_;
  ::PROTOBUF_NAMESPACE_ID::uint64 memory_;
  ::PROTOBUF_NAMESPACE_ID::uint32 starttime_;
  int serverloglevel_;
  int clientloglevel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY CustomMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.CustomMessage) */ {
 public:
  CustomMessage();
  virtual ~CustomMessage();

  CustomMessage(const CustomMessage& from);
  CustomMessage(CustomMessage&& from) noexcept
    : CustomMessage() {
    *this = ::std::move(from);
  }

  inline CustomMessage& operator=(const CustomMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMessage& operator=(CustomMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CustomMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomMessage* internal_default_instance() {
    return reinterpret_cast<const CustomMessage*>(
               &_CustomMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CustomMessage& a, CustomMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CustomMessage* New() const final {
    return CreateMaybeMessage<CustomMessage>(nullptr);
  }

  CustomMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CustomMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CustomMessage& from);
  void MergeFrom(const CustomMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.CustomMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // bytes Message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // uint32 RequestId = 1;
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint32 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.CustomMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requestid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY ToServerUnion :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.ToServerUnion) */ {
 public:
  ToServerUnion();
  virtual ~ToServerUnion();

  ToServerUnion(const ToServerUnion& from);
  ToServerUnion(ToServerUnion&& from) noexcept
    : ToServerUnion() {
    *this = ::std::move(from);
  }

  inline ToServerUnion& operator=(const ToServerUnion& from) {
    CopyFrom(from);
    return *this;
  }
  inline ToServerUnion& operator=(ToServerUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ToServerUnion& default_instance();

  enum ValueCase {
    kInstance = 1,
    kMessage = 2,
    kString = 3,
    kStatus = 4,
    kCustom = 5,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToServerUnion* internal_default_instance() {
    return reinterpret_cast<const ToServerUnion*>(
               &_ToServerUnion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ToServerUnion& a, ToServerUnion& b) {
    a.Swap(&b);
  }
  inline void Swap(ToServerUnion* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ToServerUnion* New() const final {
    return CreateMaybeMessage<ToServerUnion>(nullptr);
  }

  ToServerUnion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ToServerUnion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ToServerUnion& from);
  void MergeFrom(const ToServerUnion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToServerUnion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.ToServerUnion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
    kMessageFieldNumber = 2,
    kStringFieldNumber = 3,
    kStatusFieldNumber = 4,
    kCustomFieldNumber = 5,
  };
  // .Jde.Logging.Proto.Instance Instance = 1;
  bool has_instance() const;
  private:
  bool _internal_has_instance() const;
  public:
  void clear_instance();
  const ::Jde::Logging::Proto::Instance& instance() const;
  ::Jde::Logging::Proto::Instance* release_instance();
  ::Jde::Logging::Proto::Instance* mutable_instance();
  void set_allocated_instance(::Jde::Logging::Proto::Instance* instance);
  private:
  const ::Jde::Logging::Proto::Instance& _internal_instance() const;
  ::Jde::Logging::Proto::Instance* _internal_mutable_instance();
  public:

  // .Jde.Logging.Proto.Message Message = 2;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const ::Jde::Logging::Proto::Message& message() const;
  ::Jde::Logging::Proto::Message* release_message();
  ::Jde::Logging::Proto::Message* mutable_message();
  void set_allocated_message(::Jde::Logging::Proto::Message* message);
  private:
  const ::Jde::Logging::Proto::Message& _internal_message() const;
  ::Jde::Logging::Proto::Message* _internal_mutable_message();
  public:

  // .Jde.Logging.Proto.RequestString String = 3;
  bool has_string() const;
  private:
  bool _internal_has_string() const;
  public:
  void clear_string();
  const ::Jde::Logging::Proto::RequestString& string() const;
  ::Jde::Logging::Proto::RequestString* release_string();
  ::Jde::Logging::Proto::RequestString* mutable_string();
  void set_allocated_string(::Jde::Logging::Proto::RequestString* string);
  private:
  const ::Jde::Logging::Proto::RequestString& _internal_string() const;
  ::Jde::Logging::Proto::RequestString* _internal_mutable_string();
  public:

  // .Jde.Logging.Proto.Status Status = 4;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::Jde::Logging::Proto::Status& status() const;
  ::Jde::Logging::Proto::Status* release_status();
  ::Jde::Logging::Proto::Status* mutable_status();
  void set_allocated_status(::Jde::Logging::Proto::Status* status);
  private:
  const ::Jde::Logging::Proto::Status& _internal_status() const;
  ::Jde::Logging::Proto::Status* _internal_mutable_status();
  public:

  // .Jde.Logging.Proto.CustomMessage Custom = 5;
  bool has_custom() const;
  private:
  bool _internal_has_custom() const;
  public:
  void clear_custom();
  const ::Jde::Logging::Proto::CustomMessage& custom() const;
  ::Jde::Logging::Proto::CustomMessage* release_custom();
  ::Jde::Logging::Proto::CustomMessage* mutable_custom();
  void set_allocated_custom(::Jde::Logging::Proto::CustomMessage* custom);
  private:
  const ::Jde::Logging::Proto::CustomMessage& _internal_custom() const;
  ::Jde::Logging::Proto::CustomMessage* _internal_mutable_custom();
  public:

  void clear_Value();
  ValueCase Value_case() const;
  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.ToServerUnion)
 private:
  class _Internal;
  void set_has_instance();
  void set_has_message();
  void set_has_string();
  void set_has_status();
  void set_has_custom();

  inline bool has_Value() const;
  inline void clear_has_Value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::Jde::Logging::Proto::Instance* instance_;
    ::Jde::Logging::Proto::Message* message_;
    ::Jde::Logging::Proto::RequestString* string_;
    ::Jde::Logging::Proto::Status* status_;
    ::Jde::Logging::Proto::CustomMessage* custom_;
  } Value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY ToServer :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.ToServer) */ {
 public:
  ToServer();
  virtual ~ToServer();

  ToServer(const ToServer& from);
  ToServer(ToServer&& from) noexcept
    : ToServer() {
    *this = ::std::move(from);
  }

  inline ToServer& operator=(const ToServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline ToServer& operator=(ToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToServer* internal_default_instance() {
    return reinterpret_cast<const ToServer*>(
               &_ToServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ToServer& a, ToServer& b) {
    a.Swap(&b);
  }
  inline void Swap(ToServer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ToServer* New() const final {
    return CreateMaybeMessage<ToServer>(nullptr);
  }

  ToServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ToServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ToServer& from);
  void MergeFrom(const ToServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.ToServer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::Jde::Logging::Proto::ToServerUnion* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::ToServerUnion >*
      mutable_messages();
  private:
  const ::Jde::Logging::Proto::ToServerUnion& _internal_messages(int index) const;
  ::Jde::Logging::Proto::ToServerUnion* _internal_add_messages();
  public:
  const ::Jde::Logging::Proto::ToServerUnion& messages(int index) const;
  ::Jde::Logging::Proto::ToServerUnion* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::ToServerUnion >&
      messages() const;

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.ToServer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::ToServerUnion > messages_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY Acknowledgement :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.Acknowledgement) */ {
 public:
  Acknowledgement();
  virtual ~Acknowledgement();

  Acknowledgement(const Acknowledgement& from);
  Acknowledgement(Acknowledgement&& from) noexcept
    : Acknowledgement() {
    *this = ::std::move(from);
  }

  inline Acknowledgement& operator=(const Acknowledgement& from) {
    CopyFrom(from);
    return *this;
  }
  inline Acknowledgement& operator=(Acknowledgement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Acknowledgement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Acknowledgement* internal_default_instance() {
    return reinterpret_cast<const Acknowledgement*>(
               &_Acknowledgement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Acknowledgement& a, Acknowledgement& b) {
    a.Swap(&b);
  }
  inline void Swap(Acknowledgement* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Acknowledgement* New() const final {
    return CreateMaybeMessage<Acknowledgement>(nullptr);
  }

  Acknowledgement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Acknowledgement>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Acknowledgement& from);
  void MergeFrom(const Acknowledgement& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Acknowledgement* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.Acknowledgement";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
  };
  // uint32 InstanceId = 1;
  void clear_instanceid();
  ::PROTOBUF_NAMESPACE_ID::uint32 instanceid() const;
  void set_instanceid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_instanceid() const;
  void _internal_set_instanceid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.Acknowledgement)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 instanceid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY GenericFromServer :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.GenericFromServer) */ {
 public:
  GenericFromServer();
  virtual ~GenericFromServer();

  GenericFromServer(const GenericFromServer& from);
  GenericFromServer(GenericFromServer&& from) noexcept
    : GenericFromServer() {
    *this = ::std::move(from);
  }

  inline GenericFromServer& operator=(const GenericFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericFromServer& operator=(GenericFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenericFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenericFromServer* internal_default_instance() {
    return reinterpret_cast<const GenericFromServer*>(
               &_GenericFromServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GenericFromServer& a, GenericFromServer& b) {
    a.Swap(&b);
  }
  inline void Swap(GenericFromServer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenericFromServer* New() const final {
    return CreateMaybeMessage<GenericFromServer>(nullptr);
  }

  GenericFromServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenericFromServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenericFromServer& from);
  void MergeFrom(const GenericFromServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericFromServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.GenericFromServer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionFieldNumber = 2,
    kWhatFieldNumber = 1,
  };
  // string Description = 2;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // .Jde.Logging.Proto.EFromServer What = 1;
  void clear_what();
  ::Jde::Logging::Proto::EFromServer what() const;
  void set_what(::Jde::Logging::Proto::EFromServer value);
  private:
  ::Jde::Logging::Proto::EFromServer _internal_what() const;
  void _internal_set_what(::Jde::Logging::Proto::EFromServer value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.GenericFromServer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  int what_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY Strings :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.Strings) */ {
 public:
  Strings();
  virtual ~Strings();

  Strings(const Strings& from);
  Strings(Strings&& from) noexcept
    : Strings() {
    *this = ::std::move(from);
  }

  inline Strings& operator=(const Strings& from) {
    CopyFrom(from);
    return *this;
  }
  inline Strings& operator=(Strings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Strings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Strings* internal_default_instance() {
    return reinterpret_cast<const Strings*>(
               &_Strings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Strings& a, Strings& b) {
    a.Swap(&b);
  }
  inline void Swap(Strings* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Strings* New() const final {
    return CreateMaybeMessage<Strings>(nullptr);
  }

  Strings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Strings>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Strings& from);
  void MergeFrom(const Strings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Strings* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.Strings";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
    kFilesFieldNumber = 2,
    kFunctionsFieldNumber = 3,
    kThreadsFieldNumber = 4,
  };
  // repeated uint32 Messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_messages(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_messages() const;
  void _internal_add_messages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_messages();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 messages(int index) const;
  void set_messages(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_messages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      messages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_messages();

  // repeated uint32 Files = 2;
  int files_size() const;
  private:
  int _internal_files_size() const;
  public:
  void clear_files();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_files(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_files() const;
  void _internal_add_files(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_files();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 files(int index) const;
  void set_files(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_files(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      files() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_files();

  // repeated uint32 Functions = 3;
  int functions_size() const;
  private:
  int _internal_functions_size() const;
  public:
  void clear_functions();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_functions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_functions() const;
  void _internal_add_functions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_functions();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 functions(int index) const;
  void set_functions(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_functions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      functions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_functions();

  // repeated uint32 Threads = 4;
  int threads_size() const;
  private:
  int _internal_threads_size() const;
  public:
  void clear_threads();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_threads(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_threads() const;
  void _internal_add_threads(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_threads();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 threads(int index) const;
  void set_threads(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_threads(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      threads() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_threads();

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.Strings)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > messages_;
  mutable std::atomic<int> _messages_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > files_;
  mutable std::atomic<int> _files_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > functions_;
  mutable std::atomic<int> _functions_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > threads_;
  mutable std::atomic<int> _threads_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY LogLevels :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.LogLevels) */ {
 public:
  LogLevels();
  virtual ~LogLevels();

  LogLevels(const LogLevels& from);
  LogLevels(LogLevels&& from) noexcept
    : LogLevels() {
    *this = ::std::move(from);
  }

  inline LogLevels& operator=(const LogLevels& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogLevels& operator=(LogLevels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogLevels& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogLevels* internal_default_instance() {
    return reinterpret_cast<const LogLevels*>(
               &_LogLevels_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(LogLevels& a, LogLevels& b) {
    a.Swap(&b);
  }
  inline void Swap(LogLevels* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogLevels* New() const final {
    return CreateMaybeMessage<LogLevels>(nullptr);
  }

  LogLevels* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogLevels>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogLevels& from);
  void MergeFrom(const LogLevels& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogLevels* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.LogLevels";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerFieldNumber = 1,
    kClientFieldNumber = 2,
  };
  // .Jde.Logging.Proto.ELogLevel Server = 1;
  void clear_server();
  ::Jde::Logging::Proto::ELogLevel server() const;
  void set_server(::Jde::Logging::Proto::ELogLevel value);
  private:
  ::Jde::Logging::Proto::ELogLevel _internal_server() const;
  void _internal_set_server(::Jde::Logging::Proto::ELogLevel value);
  public:

  // .Jde.Logging.Proto.ELogLevel Client = 2;
  void clear_client();
  ::Jde::Logging::Proto::ELogLevel client() const;
  void set_client(::Jde::Logging::Proto::ELogLevel value);
  private:
  ::Jde::Logging::Proto::ELogLevel _internal_client() const;
  void _internal_set_client(::Jde::Logging::Proto::ELogLevel value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.LogLevels)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int server_;
  int client_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY FromServerUnion :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.FromServerUnion) */ {
 public:
  FromServerUnion();
  virtual ~FromServerUnion();

  FromServerUnion(const FromServerUnion& from);
  FromServerUnion(FromServerUnion&& from) noexcept
    : FromServerUnion() {
    *this = ::std::move(from);
  }

  inline FromServerUnion& operator=(const FromServerUnion& from) {
    CopyFrom(from);
    return *this;
  }
  inline FromServerUnion& operator=(FromServerUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FromServerUnion& default_instance();

  enum ValueCase {
    kAcknowledgement = 1,
    kGeneric = 2,
    kStrings = 3,
    kLogLevels = 4,
    kCustom = 5,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FromServerUnion* internal_default_instance() {
    return reinterpret_cast<const FromServerUnion*>(
               &_FromServerUnion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(FromServerUnion& a, FromServerUnion& b) {
    a.Swap(&b);
  }
  inline void Swap(FromServerUnion* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FromServerUnion* New() const final {
    return CreateMaybeMessage<FromServerUnion>(nullptr);
  }

  FromServerUnion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FromServerUnion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FromServerUnion& from);
  void MergeFrom(const FromServerUnion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FromServerUnion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.FromServerUnion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAcknowledgementFieldNumber = 1,
    kGenericFieldNumber = 2,
    kStringsFieldNumber = 3,
    kLogLevelsFieldNumber = 4,
    kCustomFieldNumber = 5,
  };
  // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
  bool has_acknowledgement() const;
  private:
  bool _internal_has_acknowledgement() const;
  public:
  void clear_acknowledgement();
  const ::Jde::Logging::Proto::Acknowledgement& acknowledgement() const;
  ::Jde::Logging::Proto::Acknowledgement* release_acknowledgement();
  ::Jde::Logging::Proto::Acknowledgement* mutable_acknowledgement();
  void set_allocated_acknowledgement(::Jde::Logging::Proto::Acknowledgement* acknowledgement);
  private:
  const ::Jde::Logging::Proto::Acknowledgement& _internal_acknowledgement() const;
  ::Jde::Logging::Proto::Acknowledgement* _internal_mutable_acknowledgement();
  public:

  // .Jde.Logging.Proto.GenericFromServer Generic = 2;
  bool has_generic() const;
  private:
  bool _internal_has_generic() const;
  public:
  void clear_generic();
  const ::Jde::Logging::Proto::GenericFromServer& generic() const;
  ::Jde::Logging::Proto::GenericFromServer* release_generic();
  ::Jde::Logging::Proto::GenericFromServer* mutable_generic();
  void set_allocated_generic(::Jde::Logging::Proto::GenericFromServer* generic);
  private:
  const ::Jde::Logging::Proto::GenericFromServer& _internal_generic() const;
  ::Jde::Logging::Proto::GenericFromServer* _internal_mutable_generic();
  public:

  // .Jde.Logging.Proto.Strings Strings = 3;
  bool has_strings() const;
  private:
  bool _internal_has_strings() const;
  public:
  void clear_strings();
  const ::Jde::Logging::Proto::Strings& strings() const;
  ::Jde::Logging::Proto::Strings* release_strings();
  ::Jde::Logging::Proto::Strings* mutable_strings();
  void set_allocated_strings(::Jde::Logging::Proto::Strings* strings);
  private:
  const ::Jde::Logging::Proto::Strings& _internal_strings() const;
  ::Jde::Logging::Proto::Strings* _internal_mutable_strings();
  public:

  // .Jde.Logging.Proto.LogLevels LogLevels = 4;
  bool has_loglevels() const;
  private:
  bool _internal_has_loglevels() const;
  public:
  void clear_loglevels();
  const ::Jde::Logging::Proto::LogLevels& loglevels() const;
  ::Jde::Logging::Proto::LogLevels* release_loglevels();
  ::Jde::Logging::Proto::LogLevels* mutable_loglevels();
  void set_allocated_loglevels(::Jde::Logging::Proto::LogLevels* loglevels);
  private:
  const ::Jde::Logging::Proto::LogLevels& _internal_loglevels() const;
  ::Jde::Logging::Proto::LogLevels* _internal_mutable_loglevels();
  public:

  // .Jde.Logging.Proto.CustomMessage Custom = 5;
  bool has_custom() const;
  private:
  bool _internal_has_custom() const;
  public:
  void clear_custom();
  const ::Jde::Logging::Proto::CustomMessage& custom() const;
  ::Jde::Logging::Proto::CustomMessage* release_custom();
  ::Jde::Logging::Proto::CustomMessage* mutable_custom();
  void set_allocated_custom(::Jde::Logging::Proto::CustomMessage* custom);
  private:
  const ::Jde::Logging::Proto::CustomMessage& _internal_custom() const;
  ::Jde::Logging::Proto::CustomMessage* _internal_mutable_custom();
  public:

  void clear_Value();
  ValueCase Value_case() const;
  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.FromServerUnion)
 private:
  class _Internal;
  void set_has_acknowledgement();
  void set_has_generic();
  void set_has_strings();
  void set_has_loglevels();
  void set_has_custom();

  inline bool has_Value() const;
  inline void clear_has_Value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::Jde::Logging::Proto::Acknowledgement* acknowledgement_;
    ::Jde::Logging::Proto::GenericFromServer* generic_;
    ::Jde::Logging::Proto::Strings* strings_;
    ::Jde::Logging::Proto::LogLevels* loglevels_;
    ::Jde::Logging::Proto::CustomMessage* custom_;
  } Value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class JDE_NATIVE_VISIBILITY FromServer :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Logging.Proto.FromServer) */ {
 public:
  FromServer();
  virtual ~FromServer();

  FromServer(const FromServer& from);
  FromServer(FromServer&& from) noexcept
    : FromServer() {
    *this = ::std::move(from);
  }

  inline FromServer& operator=(const FromServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline FromServer& operator=(FromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FromServer* internal_default_instance() {
    return reinterpret_cast<const FromServer*>(
               &_FromServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(FromServer& a, FromServer& b) {
    a.Swap(&b);
  }
  inline void Swap(FromServer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FromServer* New() const final {
    return CreateMaybeMessage<FromServer>(nullptr);
  }

  FromServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FromServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FromServer& from);
  void MergeFrom(const FromServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FromServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Logging.Proto.FromServer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_2eproto);
    return ::descriptor_table_messages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::Jde::Logging::Proto::FromServerUnion* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::FromServerUnion >*
      mutable_messages();
  private:
  const ::Jde::Logging::Proto::FromServerUnion& _internal_messages(int index) const;
  ::Jde::Logging::Proto::FromServerUnion* _internal_add_messages();
  public:
  const ::Jde::Logging::Proto::FromServerUnion& messages(int index) const;
  ::Jde::Logging::Proto::FromServerUnion* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::FromServerUnion >&
      messages() const;

  // @@protoc_insertion_point(class_scope:Jde.Logging.Proto.FromServer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::FromServerUnion > messages_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Instance

// string ApplicationName = 1;
inline void Instance::clear_applicationname() {
  applicationname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Instance::applicationname() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Instance.ApplicationName)
  return _internal_applicationname();
}
inline void Instance::set_applicationname(const std::string& value) {
  _internal_set_applicationname(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Instance.ApplicationName)
}
inline std::string* Instance::mutable_applicationname() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.Instance.ApplicationName)
  return _internal_mutable_applicationname();
}
inline const std::string& Instance::_internal_applicationname() const {
  return applicationname_.GetNoArena();
}
inline void Instance::_internal_set_applicationname(const std::string& value) {
  
  applicationname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Instance::set_applicationname(std::string&& value) {
  
  applicationname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Jde.Logging.Proto.Instance.ApplicationName)
}
inline void Instance::set_applicationname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  applicationname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.Instance.ApplicationName)
}
inline void Instance::set_applicationname(const char* value, size_t size) {
  
  applicationname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.Instance.ApplicationName)
}
inline std::string* Instance::_internal_mutable_applicationname() {
  
  return applicationname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Instance::release_applicationname() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.Instance.ApplicationName)
  
  return applicationname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_applicationname(std::string* applicationname) {
  if (applicationname != nullptr) {
    
  } else {
    
  }
  applicationname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), applicationname);
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.Instance.ApplicationName)
}

// string HostName = 2;
inline void Instance::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Instance::hostname() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Instance.HostName)
  return _internal_hostname();
}
inline void Instance::set_hostname(const std::string& value) {
  _internal_set_hostname(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Instance.HostName)
}
inline std::string* Instance::mutable_hostname() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.Instance.HostName)
  return _internal_mutable_hostname();
}
inline const std::string& Instance::_internal_hostname() const {
  return hostname_.GetNoArena();
}
inline void Instance::_internal_set_hostname(const std::string& value) {
  
  hostname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Instance::set_hostname(std::string&& value) {
  
  hostname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Jde.Logging.Proto.Instance.HostName)
}
inline void Instance::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hostname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.Instance.HostName)
}
inline void Instance::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.Instance.HostName)
}
inline std::string* Instance::_internal_mutable_hostname() {
  
  return hostname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Instance::release_hostname() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.Instance.HostName)
  
  return hostname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_hostname(std::string* hostname) {
  if (hostname != nullptr) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.Instance.HostName)
}

// int32 ProcessId = 3;
inline void Instance::clear_processid() {
  processid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Instance::_internal_processid() const {
  return processid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Instance::processid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Instance.ProcessId)
  return _internal_processid();
}
inline void Instance::_internal_set_processid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  processid_ = value;
}
inline void Instance::set_processid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_processid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Instance.ProcessId)
}

// uint32 StartTime = 5;
inline void Instance::clear_starttime() {
  starttime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Instance::_internal_starttime() const {
  return starttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Instance::starttime() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Instance.StartTime)
  return _internal_starttime();
}
inline void Instance::_internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  starttime_ = value;
}
inline void Instance::set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_starttime(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Instance.StartTime)
}

// -------------------------------------------------------------------

// Message

// .google.protobuf.Timestamp Time = 1;
inline bool Message::_internal_has_time() const {
  return this != internal_default_instance() && time_ != nullptr;
}
inline bool Message::has_time() const {
  return _internal_has_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Message::_internal_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Message::time() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.Time)
  return _internal_time();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Message::release_time() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.Message.Time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = time_;
  time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Message::_internal_mutable_time() {
  
  if (time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    time_ = p;
  }
  return time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Message::mutable_time() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.Message.Time)
  return _internal_mutable_time();
}
inline void Message::set_allocated_time(PROTOBUF_NAMESPACE_ID::Timestamp* time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_);
  }
  if (time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time)->GetArena();
    if (message_arena != submessage_arena) {
      time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    
  } else {
    
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.Message.Time)
}

// .Jde.Logging.Proto.ELogLevel Level = 2;
inline void Message::clear_level() {
  level_ = 0;
}
inline ::Jde::Logging::Proto::ELogLevel Message::_internal_level() const {
  return static_cast< ::Jde::Logging::Proto::ELogLevel >(level_);
}
inline ::Jde::Logging::Proto::ELogLevel Message::level() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.Level)
  return _internal_level();
}
inline void Message::_internal_set_level(::Jde::Logging::Proto::ELogLevel value) {
  
  level_ = value;
}
inline void Message::set_level(::Jde::Logging::Proto::ELogLevel value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.Level)
}

// uint32 MessageId = 3;
inline void Message::clear_messageid() {
  messageid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::_internal_messageid() const {
  return messageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::messageid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.MessageId)
  return _internal_messageid();
}
inline void Message::_internal_set_messageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  messageid_ = value;
}
inline void Message::set_messageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_messageid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.MessageId)
}

// uint32 FileId = 4;
inline void Message::clear_fileid() {
  fileid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::_internal_fileid() const {
  return fileid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::fileid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.FileId)
  return _internal_fileid();
}
inline void Message::_internal_set_fileid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fileid_ = value;
}
inline void Message::set_fileid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fileid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.FileId)
}

// uint32 FunctionId = 5;
inline void Message::clear_functionid() {
  functionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::_internal_functionid() const {
  return functionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::functionid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.FunctionId)
  return _internal_functionid();
}
inline void Message::_internal_set_functionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  functionid_ = value;
}
inline void Message::set_functionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_functionid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.FunctionId)
}

// uint32 LineNumber = 6;
inline void Message::clear_linenumber() {
  linenumber_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::_internal_linenumber() const {
  return linenumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::linenumber() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.LineNumber)
  return _internal_linenumber();
}
inline void Message::_internal_set_linenumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  linenumber_ = value;
}
inline void Message::set_linenumber(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_linenumber(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.LineNumber)
}

// uint32 UserId = 7;
inline void Message::clear_userid() {
  userid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Message::userid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.UserId)
  return _internal_userid();
}
inline void Message::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  userid_ = value;
}
inline void Message::set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.UserId)
}

// uint64 ThreadId = 8;
inline void Message::clear_threadid() {
  threadid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Message::_internal_threadid() const {
  return threadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Message::threadid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.ThreadId)
  return _internal_threadid();
}
inline void Message::_internal_set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  threadid_ = value;
}
inline void Message::set_threadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_threadid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.ThreadId)
}

// repeated string Variables = 9;
inline int Message::_internal_variables_size() const {
  return variables_.size();
}
inline int Message::variables_size() const {
  return _internal_variables_size();
}
inline void Message::clear_variables() {
  variables_.Clear();
}
inline std::string* Message::add_variables() {
  // @@protoc_insertion_point(field_add_mutable:Jde.Logging.Proto.Message.Variables)
  return _internal_add_variables();
}
inline const std::string& Message::_internal_variables(int index) const {
  return variables_.Get(index);
}
inline const std::string& Message::variables(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Message.Variables)
  return _internal_variables(index);
}
inline std::string* Message::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.Message.Variables)
  return variables_.Mutable(index);
}
inline void Message::set_variables(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.Variables)
  variables_.Mutable(index)->assign(value);
}
inline void Message::set_variables(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Message.Variables)
  variables_.Mutable(index)->assign(std::move(value));
}
inline void Message::set_variables(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  variables_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.Message.Variables)
}
inline void Message::set_variables(int index, const char* value, size_t size) {
  variables_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.Message.Variables)
}
inline std::string* Message::_internal_add_variables() {
  return variables_.Add();
}
inline void Message::add_variables(const std::string& value) {
  variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Message.Variables)
}
inline void Message::add_variables(std::string&& value) {
  variables_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Message.Variables)
}
inline void Message::add_variables(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Jde.Logging.Proto.Message.Variables)
}
inline void Message::add_variables(const char* value, size_t size) {
  variables_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Jde.Logging.Proto.Message.Variables)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Message::variables() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.Message.Variables)
  return variables_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Message::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.Message.Variables)
  return &variables_;
}

// -------------------------------------------------------------------

// RequestString

// .Jde.Logging.Proto.EFields Field = 1;
inline void RequestString::clear_field() {
  field_ = 0;
}
inline ::Jde::Logging::Proto::EFields RequestString::_internal_field() const {
  return static_cast< ::Jde::Logging::Proto::EFields >(field_);
}
inline ::Jde::Logging::Proto::EFields RequestString::field() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.RequestString.Field)
  return _internal_field();
}
inline void RequestString::_internal_set_field(::Jde::Logging::Proto::EFields value) {
  
  field_ = value;
}
inline void RequestString::set_field(::Jde::Logging::Proto::EFields value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.RequestString.Field)
}

// uint32 Id = 2;
inline void RequestString::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestString::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestString::id() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.RequestString.Id)
  return _internal_id();
}
inline void RequestString::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestString::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.RequestString.Id)
}

// string Value = 3;
inline void RequestString::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& RequestString::value() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.RequestString.Value)
  return _internal_value();
}
inline void RequestString::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.RequestString.Value)
}
inline std::string* RequestString::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.RequestString.Value)
  return _internal_mutable_value();
}
inline const std::string& RequestString::_internal_value() const {
  return value_.GetNoArena();
}
inline void RequestString::_internal_set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RequestString::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Jde.Logging.Proto.RequestString.Value)
}
inline void RequestString::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.RequestString.Value)
}
inline void RequestString::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.RequestString.Value)
}
inline std::string* RequestString::_internal_mutable_value() {
  
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RequestString::release_value() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.RequestString.Value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RequestString::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.RequestString.Value)
}

// -------------------------------------------------------------------

// Status

// uint32 StartTime = 1;
inline void Status::clear_starttime() {
  starttime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Status::_internal_starttime() const {
  return starttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Status::starttime() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Status.StartTime)
  return _internal_starttime();
}
inline void Status::_internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  starttime_ = value;
}
inline void Status::set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_starttime(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Status.StartTime)
}

// uint64 Memory = 2;
inline void Status::clear_memory() {
  memory_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Status::_internal_memory() const {
  return memory_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Status::memory() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Status.Memory)
  return _internal_memory();
}
inline void Status::_internal_set_memory(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  memory_ = value;
}
inline void Status::set_memory(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_memory(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Status.Memory)
}

// .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
inline void Status::clear_serverloglevel() {
  serverloglevel_ = 0;
}
inline ::Jde::Logging::Proto::ELogLevel Status::_internal_serverloglevel() const {
  return static_cast< ::Jde::Logging::Proto::ELogLevel >(serverloglevel_);
}
inline ::Jde::Logging::Proto::ELogLevel Status::serverloglevel() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Status.ServerLogLevel)
  return _internal_serverloglevel();
}
inline void Status::_internal_set_serverloglevel(::Jde::Logging::Proto::ELogLevel value) {
  
  serverloglevel_ = value;
}
inline void Status::set_serverloglevel(::Jde::Logging::Proto::ELogLevel value) {
  _internal_set_serverloglevel(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Status.ServerLogLevel)
}

// .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
inline void Status::clear_clientloglevel() {
  clientloglevel_ = 0;
}
inline ::Jde::Logging::Proto::ELogLevel Status::_internal_clientloglevel() const {
  return static_cast< ::Jde::Logging::Proto::ELogLevel >(clientloglevel_);
}
inline ::Jde::Logging::Proto::ELogLevel Status::clientloglevel() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Status.ClientLogLevel)
  return _internal_clientloglevel();
}
inline void Status::_internal_set_clientloglevel(::Jde::Logging::Proto::ELogLevel value) {
  
  clientloglevel_ = value;
}
inline void Status::set_clientloglevel(::Jde::Logging::Proto::ELogLevel value) {
  _internal_set_clientloglevel(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Status.ClientLogLevel)
}

// repeated string Details = 5;
inline int Status::_internal_details_size() const {
  return details_.size();
}
inline int Status::details_size() const {
  return _internal_details_size();
}
inline void Status::clear_details() {
  details_.Clear();
}
inline std::string* Status::add_details() {
  // @@protoc_insertion_point(field_add_mutable:Jde.Logging.Proto.Status.Details)
  return _internal_add_details();
}
inline const std::string& Status::_internal_details(int index) const {
  return details_.Get(index);
}
inline const std::string& Status::details(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Status.Details)
  return _internal_details(index);
}
inline std::string* Status::mutable_details(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.Status.Details)
  return details_.Mutable(index);
}
inline void Status::set_details(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Status.Details)
  details_.Mutable(index)->assign(value);
}
inline void Status::set_details(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Status.Details)
  details_.Mutable(index)->assign(std::move(value));
}
inline void Status::set_details(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.Status.Details)
}
inline void Status::set_details(int index, const char* value, size_t size) {
  details_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.Status.Details)
}
inline std::string* Status::_internal_add_details() {
  return details_.Add();
}
inline void Status::add_details(const std::string& value) {
  details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Status.Details)
}
inline void Status::add_details(std::string&& value) {
  details_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Status.Details)
}
inline void Status::add_details(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Jde.Logging.Proto.Status.Details)
}
inline void Status::add_details(const char* value, size_t size) {
  details_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Jde.Logging.Proto.Status.Details)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Status::details() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.Status.Details)
  return details_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Status::mutable_details() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.Status.Details)
  return &details_;
}

// -------------------------------------------------------------------

// CustomMessage

// uint32 RequestId = 1;
inline void CustomMessage::clear_requestid() {
  requestid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CustomMessage::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CustomMessage::requestid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.CustomMessage.RequestId)
  return _internal_requestid();
}
inline void CustomMessage::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  requestid_ = value;
}
inline void CustomMessage::set_requestid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.CustomMessage.RequestId)
}

// bytes Message = 2;
inline void CustomMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CustomMessage::message() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.CustomMessage.Message)
  return _internal_message();
}
inline void CustomMessage::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.CustomMessage.Message)
}
inline std::string* CustomMessage::mutable_message() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.CustomMessage.Message)
  return _internal_mutable_message();
}
inline const std::string& CustomMessage::_internal_message() const {
  return message_.GetNoArena();
}
inline void CustomMessage::_internal_set_message(const std::string& value) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CustomMessage::set_message(std::string&& value) {
  
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Jde.Logging.Proto.CustomMessage.Message)
}
inline void CustomMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.CustomMessage.Message)
}
inline void CustomMessage::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.CustomMessage.Message)
}
inline std::string* CustomMessage::_internal_mutable_message() {
  
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CustomMessage::release_message() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.CustomMessage.Message)
  
  return message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CustomMessage::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.CustomMessage.Message)
}

// -------------------------------------------------------------------

// ToServerUnion

// .Jde.Logging.Proto.Instance Instance = 1;
inline bool ToServerUnion::_internal_has_instance() const {
  return Value_case() == kInstance;
}
inline bool ToServerUnion::has_instance() const {
  return _internal_has_instance();
}
inline void ToServerUnion::set_has_instance() {
  _oneof_case_[0] = kInstance;
}
inline void ToServerUnion::clear_instance() {
  if (_internal_has_instance()) {
    delete Value_.instance_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::Instance* ToServerUnion::release_instance() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.ToServerUnion.Instance)
  if (has_instance()) {
    clear_has_Value();
      ::Jde::Logging::Proto::Instance* temp = Value_.instance_;
    Value_.instance_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::Instance& ToServerUnion::_internal_instance() const {
  return _internal_has_instance()
      ? *Value_.instance_
      : *reinterpret_cast< ::Jde::Logging::Proto::Instance*>(&::Jde::Logging::Proto::_Instance_default_instance_);
}
inline const ::Jde::Logging::Proto::Instance& ToServerUnion::instance() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.ToServerUnion.Instance)
  return _internal_instance();
}
inline ::Jde::Logging::Proto::Instance* ToServerUnion::_internal_mutable_instance() {
  if (!_internal_has_instance()) {
    clear_Value();
    set_has_instance();
    Value_.instance_ = CreateMaybeMessage< ::Jde::Logging::Proto::Instance >(
        GetArenaNoVirtual());
  }
  return Value_.instance_;
}
inline ::Jde::Logging::Proto::Instance* ToServerUnion::mutable_instance() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.ToServerUnion.Instance)
  return _internal_mutable_instance();
}

// .Jde.Logging.Proto.Message Message = 2;
inline bool ToServerUnion::_internal_has_message() const {
  return Value_case() == kMessage;
}
inline bool ToServerUnion::has_message() const {
  return _internal_has_message();
}
inline void ToServerUnion::set_has_message() {
  _oneof_case_[0] = kMessage;
}
inline void ToServerUnion::clear_message() {
  if (_internal_has_message()) {
    delete Value_.message_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::Message* ToServerUnion::release_message() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.ToServerUnion.Message)
  if (has_message()) {
    clear_has_Value();
      ::Jde::Logging::Proto::Message* temp = Value_.message_;
    Value_.message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::Message& ToServerUnion::_internal_message() const {
  return _internal_has_message()
      ? *Value_.message_
      : *reinterpret_cast< ::Jde::Logging::Proto::Message*>(&::Jde::Logging::Proto::_Message_default_instance_);
}
inline const ::Jde::Logging::Proto::Message& ToServerUnion::message() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.ToServerUnion.Message)
  return _internal_message();
}
inline ::Jde::Logging::Proto::Message* ToServerUnion::_internal_mutable_message() {
  if (!_internal_has_message()) {
    clear_Value();
    set_has_message();
    Value_.message_ = CreateMaybeMessage< ::Jde::Logging::Proto::Message >(
        GetArenaNoVirtual());
  }
  return Value_.message_;
}
inline ::Jde::Logging::Proto::Message* ToServerUnion::mutable_message() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.ToServerUnion.Message)
  return _internal_mutable_message();
}

// .Jde.Logging.Proto.RequestString String = 3;
inline bool ToServerUnion::_internal_has_string() const {
  return Value_case() == kString;
}
inline bool ToServerUnion::has_string() const {
  return _internal_has_string();
}
inline void ToServerUnion::set_has_string() {
  _oneof_case_[0] = kString;
}
inline void ToServerUnion::clear_string() {
  if (_internal_has_string()) {
    delete Value_.string_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::RequestString* ToServerUnion::release_string() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.ToServerUnion.String)
  if (has_string()) {
    clear_has_Value();
      ::Jde::Logging::Proto::RequestString* temp = Value_.string_;
    Value_.string_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::RequestString& ToServerUnion::_internal_string() const {
  return _internal_has_string()
      ? *Value_.string_
      : *reinterpret_cast< ::Jde::Logging::Proto::RequestString*>(&::Jde::Logging::Proto::_RequestString_default_instance_);
}
inline const ::Jde::Logging::Proto::RequestString& ToServerUnion::string() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.ToServerUnion.String)
  return _internal_string();
}
inline ::Jde::Logging::Proto::RequestString* ToServerUnion::_internal_mutable_string() {
  if (!_internal_has_string()) {
    clear_Value();
    set_has_string();
    Value_.string_ = CreateMaybeMessage< ::Jde::Logging::Proto::RequestString >(
        GetArenaNoVirtual());
  }
  return Value_.string_;
}
inline ::Jde::Logging::Proto::RequestString* ToServerUnion::mutable_string() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.ToServerUnion.String)
  return _internal_mutable_string();
}

// .Jde.Logging.Proto.Status Status = 4;
inline bool ToServerUnion::_internal_has_status() const {
  return Value_case() == kStatus;
}
inline bool ToServerUnion::has_status() const {
  return _internal_has_status();
}
inline void ToServerUnion::set_has_status() {
  _oneof_case_[0] = kStatus;
}
inline void ToServerUnion::clear_status() {
  if (_internal_has_status()) {
    delete Value_.status_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::Status* ToServerUnion::release_status() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.ToServerUnion.Status)
  if (has_status()) {
    clear_has_Value();
      ::Jde::Logging::Proto::Status* temp = Value_.status_;
    Value_.status_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::Status& ToServerUnion::_internal_status() const {
  return _internal_has_status()
      ? *Value_.status_
      : *reinterpret_cast< ::Jde::Logging::Proto::Status*>(&::Jde::Logging::Proto::_Status_default_instance_);
}
inline const ::Jde::Logging::Proto::Status& ToServerUnion::status() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.ToServerUnion.Status)
  return _internal_status();
}
inline ::Jde::Logging::Proto::Status* ToServerUnion::_internal_mutable_status() {
  if (!_internal_has_status()) {
    clear_Value();
    set_has_status();
    Value_.status_ = CreateMaybeMessage< ::Jde::Logging::Proto::Status >(
        GetArenaNoVirtual());
  }
  return Value_.status_;
}
inline ::Jde::Logging::Proto::Status* ToServerUnion::mutable_status() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.ToServerUnion.Status)
  return _internal_mutable_status();
}

// .Jde.Logging.Proto.CustomMessage Custom = 5;
inline bool ToServerUnion::_internal_has_custom() const {
  return Value_case() == kCustom;
}
inline bool ToServerUnion::has_custom() const {
  return _internal_has_custom();
}
inline void ToServerUnion::set_has_custom() {
  _oneof_case_[0] = kCustom;
}
inline void ToServerUnion::clear_custom() {
  if (_internal_has_custom()) {
    delete Value_.custom_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::CustomMessage* ToServerUnion::release_custom() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.ToServerUnion.Custom)
  if (has_custom()) {
    clear_has_Value();
      ::Jde::Logging::Proto::CustomMessage* temp = Value_.custom_;
    Value_.custom_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::CustomMessage& ToServerUnion::_internal_custom() const {
  return _internal_has_custom()
      ? *Value_.custom_
      : *reinterpret_cast< ::Jde::Logging::Proto::CustomMessage*>(&::Jde::Logging::Proto::_CustomMessage_default_instance_);
}
inline const ::Jde::Logging::Proto::CustomMessage& ToServerUnion::custom() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.ToServerUnion.Custom)
  return _internal_custom();
}
inline ::Jde::Logging::Proto::CustomMessage* ToServerUnion::_internal_mutable_custom() {
  if (!_internal_has_custom()) {
    clear_Value();
    set_has_custom();
    Value_.custom_ = CreateMaybeMessage< ::Jde::Logging::Proto::CustomMessage >(
        GetArenaNoVirtual());
  }
  return Value_.custom_;
}
inline ::Jde::Logging::Proto::CustomMessage* ToServerUnion::mutable_custom() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.ToServerUnion.Custom)
  return _internal_mutable_custom();
}

inline bool ToServerUnion::has_Value() const {
  return Value_case() != VALUE_NOT_SET;
}
inline void ToServerUnion::clear_has_Value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline ToServerUnion::ValueCase ToServerUnion::Value_case() const {
  return ToServerUnion::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ToServer

// repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
inline int ToServer::_internal_messages_size() const {
  return messages_.size();
}
inline int ToServer::messages_size() const {
  return _internal_messages_size();
}
inline void ToServer::clear_messages() {
  messages_.Clear();
}
inline ::Jde::Logging::Proto::ToServerUnion* ToServer::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.ToServer.Messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::ToServerUnion >*
ToServer::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.ToServer.Messages)
  return &messages_;
}
inline const ::Jde::Logging::Proto::ToServerUnion& ToServer::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::Jde::Logging::Proto::ToServerUnion& ToServer::messages(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.ToServer.Messages)
  return _internal_messages(index);
}
inline ::Jde::Logging::Proto::ToServerUnion* ToServer::_internal_add_messages() {
  return messages_.Add();
}
inline ::Jde::Logging::Proto::ToServerUnion* ToServer::add_messages() {
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.ToServer.Messages)
  return _internal_add_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::ToServerUnion >&
ToServer::messages() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.ToServer.Messages)
  return messages_;
}

// -------------------------------------------------------------------

// Acknowledgement

// uint32 InstanceId = 1;
inline void Acknowledgement::clear_instanceid() {
  instanceid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Acknowledgement::_internal_instanceid() const {
  return instanceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Acknowledgement::instanceid() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Acknowledgement.InstanceId)
  return _internal_instanceid();
}
inline void Acknowledgement::_internal_set_instanceid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  instanceid_ = value;
}
inline void Acknowledgement::set_instanceid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_instanceid(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Acknowledgement.InstanceId)
}

// -------------------------------------------------------------------

// GenericFromServer

// .Jde.Logging.Proto.EFromServer What = 1;
inline void GenericFromServer::clear_what() {
  what_ = 0;
}
inline ::Jde::Logging::Proto::EFromServer GenericFromServer::_internal_what() const {
  return static_cast< ::Jde::Logging::Proto::EFromServer >(what_);
}
inline ::Jde::Logging::Proto::EFromServer GenericFromServer::what() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.GenericFromServer.What)
  return _internal_what();
}
inline void GenericFromServer::_internal_set_what(::Jde::Logging::Proto::EFromServer value) {
  
  what_ = value;
}
inline void GenericFromServer::set_what(::Jde::Logging::Proto::EFromServer value) {
  _internal_set_what(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.GenericFromServer.What)
}

// string Description = 2;
inline void GenericFromServer::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GenericFromServer::description() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.GenericFromServer.Description)
  return _internal_description();
}
inline void GenericFromServer::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.GenericFromServer.Description)
}
inline std::string* GenericFromServer::mutable_description() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.GenericFromServer.Description)
  return _internal_mutable_description();
}
inline const std::string& GenericFromServer::_internal_description() const {
  return description_.GetNoArena();
}
inline void GenericFromServer::_internal_set_description(const std::string& value) {
  
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GenericFromServer::set_description(std::string&& value) {
  
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Jde.Logging.Proto.GenericFromServer.Description)
}
inline void GenericFromServer::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Jde.Logging.Proto.GenericFromServer.Description)
}
inline void GenericFromServer::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Jde.Logging.Proto.GenericFromServer.Description)
}
inline std::string* GenericFromServer::_internal_mutable_description() {
  
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GenericFromServer::release_description() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.GenericFromServer.Description)
  
  return description_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GenericFromServer::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.GenericFromServer.Description)
}

// -------------------------------------------------------------------

// Strings

// repeated uint32 Messages = 1;
inline int Strings::_internal_messages_size() const {
  return messages_.size();
}
inline int Strings::messages_size() const {
  return _internal_messages_size();
}
inline void Strings::clear_messages() {
  messages_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::messages(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Strings.Messages)
  return _internal_messages(index);
}
inline void Strings::set_messages(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  messages_.Set(index, value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Strings.Messages)
}
inline void Strings::_internal_add_messages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  messages_.Add(value);
}
inline void Strings::add_messages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_messages(value);
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Strings.Messages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::_internal_messages() const {
  return messages_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::messages() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.Strings.Messages)
  return _internal_messages();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::_internal_mutable_messages() {
  return &messages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.Strings.Messages)
  return _internal_mutable_messages();
}

// repeated uint32 Files = 2;
inline int Strings::_internal_files_size() const {
  return files_.size();
}
inline int Strings::files_size() const {
  return _internal_files_size();
}
inline void Strings::clear_files() {
  files_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::_internal_files(int index) const {
  return files_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::files(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Strings.Files)
  return _internal_files(index);
}
inline void Strings::set_files(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  files_.Set(index, value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Strings.Files)
}
inline void Strings::_internal_add_files(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  files_.Add(value);
}
inline void Strings::add_files(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_files(value);
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Strings.Files)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::_internal_files() const {
  return files_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::files() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.Strings.Files)
  return _internal_files();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::_internal_mutable_files() {
  return &files_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.Strings.Files)
  return _internal_mutable_files();
}

// repeated uint32 Functions = 3;
inline int Strings::_internal_functions_size() const {
  return functions_.size();
}
inline int Strings::functions_size() const {
  return _internal_functions_size();
}
inline void Strings::clear_functions() {
  functions_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::_internal_functions(int index) const {
  return functions_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::functions(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Strings.Functions)
  return _internal_functions(index);
}
inline void Strings::set_functions(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  functions_.Set(index, value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Strings.Functions)
}
inline void Strings::_internal_add_functions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  functions_.Add(value);
}
inline void Strings::add_functions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_functions(value);
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Strings.Functions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::_internal_functions() const {
  return functions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::functions() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.Strings.Functions)
  return _internal_functions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::_internal_mutable_functions() {
  return &functions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.Strings.Functions)
  return _internal_mutable_functions();
}

// repeated uint32 Threads = 4;
inline int Strings::_internal_threads_size() const {
  return threads_.size();
}
inline int Strings::threads_size() const {
  return _internal_threads_size();
}
inline void Strings::clear_threads() {
  threads_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::_internal_threads(int index) const {
  return threads_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Strings::threads(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.Strings.Threads)
  return _internal_threads(index);
}
inline void Strings::set_threads(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  threads_.Set(index, value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.Strings.Threads)
}
inline void Strings::_internal_add_threads(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  threads_.Add(value);
}
inline void Strings::add_threads(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_threads(value);
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.Strings.Threads)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::_internal_threads() const {
  return threads_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Strings::threads() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.Strings.Threads)
  return _internal_threads();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::_internal_mutable_threads() {
  return &threads_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Strings::mutable_threads() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.Strings.Threads)
  return _internal_mutable_threads();
}

// -------------------------------------------------------------------

// LogLevels

// .Jde.Logging.Proto.ELogLevel Server = 1;
inline void LogLevels::clear_server() {
  server_ = 0;
}
inline ::Jde::Logging::Proto::ELogLevel LogLevels::_internal_server() const {
  return static_cast< ::Jde::Logging::Proto::ELogLevel >(server_);
}
inline ::Jde::Logging::Proto::ELogLevel LogLevels::server() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.LogLevels.Server)
  return _internal_server();
}
inline void LogLevels::_internal_set_server(::Jde::Logging::Proto::ELogLevel value) {
  
  server_ = value;
}
inline void LogLevels::set_server(::Jde::Logging::Proto::ELogLevel value) {
  _internal_set_server(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.LogLevels.Server)
}

// .Jde.Logging.Proto.ELogLevel Client = 2;
inline void LogLevels::clear_client() {
  client_ = 0;
}
inline ::Jde::Logging::Proto::ELogLevel LogLevels::_internal_client() const {
  return static_cast< ::Jde::Logging::Proto::ELogLevel >(client_);
}
inline ::Jde::Logging::Proto::ELogLevel LogLevels::client() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.LogLevels.Client)
  return _internal_client();
}
inline void LogLevels::_internal_set_client(::Jde::Logging::Proto::ELogLevel value) {
  
  client_ = value;
}
inline void LogLevels::set_client(::Jde::Logging::Proto::ELogLevel value) {
  _internal_set_client(value);
  // @@protoc_insertion_point(field_set:Jde.Logging.Proto.LogLevels.Client)
}

// -------------------------------------------------------------------

// FromServerUnion

// .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
inline bool FromServerUnion::_internal_has_acknowledgement() const {
  return Value_case() == kAcknowledgement;
}
inline bool FromServerUnion::has_acknowledgement() const {
  return _internal_has_acknowledgement();
}
inline void FromServerUnion::set_has_acknowledgement() {
  _oneof_case_[0] = kAcknowledgement;
}
inline void FromServerUnion::clear_acknowledgement() {
  if (_internal_has_acknowledgement()) {
    delete Value_.acknowledgement_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::Acknowledgement* FromServerUnion::release_acknowledgement() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.FromServerUnion.Acknowledgement)
  if (has_acknowledgement()) {
    clear_has_Value();
      ::Jde::Logging::Proto::Acknowledgement* temp = Value_.acknowledgement_;
    Value_.acknowledgement_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::Acknowledgement& FromServerUnion::_internal_acknowledgement() const {
  return _internal_has_acknowledgement()
      ? *Value_.acknowledgement_
      : *reinterpret_cast< ::Jde::Logging::Proto::Acknowledgement*>(&::Jde::Logging::Proto::_Acknowledgement_default_instance_);
}
inline const ::Jde::Logging::Proto::Acknowledgement& FromServerUnion::acknowledgement() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.FromServerUnion.Acknowledgement)
  return _internal_acknowledgement();
}
inline ::Jde::Logging::Proto::Acknowledgement* FromServerUnion::_internal_mutable_acknowledgement() {
  if (!_internal_has_acknowledgement()) {
    clear_Value();
    set_has_acknowledgement();
    Value_.acknowledgement_ = CreateMaybeMessage< ::Jde::Logging::Proto::Acknowledgement >(
        GetArenaNoVirtual());
  }
  return Value_.acknowledgement_;
}
inline ::Jde::Logging::Proto::Acknowledgement* FromServerUnion::mutable_acknowledgement() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.FromServerUnion.Acknowledgement)
  return _internal_mutable_acknowledgement();
}

// .Jde.Logging.Proto.GenericFromServer Generic = 2;
inline bool FromServerUnion::_internal_has_generic() const {
  return Value_case() == kGeneric;
}
inline bool FromServerUnion::has_generic() const {
  return _internal_has_generic();
}
inline void FromServerUnion::set_has_generic() {
  _oneof_case_[0] = kGeneric;
}
inline void FromServerUnion::clear_generic() {
  if (_internal_has_generic()) {
    delete Value_.generic_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::GenericFromServer* FromServerUnion::release_generic() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.FromServerUnion.Generic)
  if (has_generic()) {
    clear_has_Value();
      ::Jde::Logging::Proto::GenericFromServer* temp = Value_.generic_;
    Value_.generic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::GenericFromServer& FromServerUnion::_internal_generic() const {
  return _internal_has_generic()
      ? *Value_.generic_
      : *reinterpret_cast< ::Jde::Logging::Proto::GenericFromServer*>(&::Jde::Logging::Proto::_GenericFromServer_default_instance_);
}
inline const ::Jde::Logging::Proto::GenericFromServer& FromServerUnion::generic() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.FromServerUnion.Generic)
  return _internal_generic();
}
inline ::Jde::Logging::Proto::GenericFromServer* FromServerUnion::_internal_mutable_generic() {
  if (!_internal_has_generic()) {
    clear_Value();
    set_has_generic();
    Value_.generic_ = CreateMaybeMessage< ::Jde::Logging::Proto::GenericFromServer >(
        GetArenaNoVirtual());
  }
  return Value_.generic_;
}
inline ::Jde::Logging::Proto::GenericFromServer* FromServerUnion::mutable_generic() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.FromServerUnion.Generic)
  return _internal_mutable_generic();
}

// .Jde.Logging.Proto.Strings Strings = 3;
inline bool FromServerUnion::_internal_has_strings() const {
  return Value_case() == kStrings;
}
inline bool FromServerUnion::has_strings() const {
  return _internal_has_strings();
}
inline void FromServerUnion::set_has_strings() {
  _oneof_case_[0] = kStrings;
}
inline void FromServerUnion::clear_strings() {
  if (_internal_has_strings()) {
    delete Value_.strings_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::Strings* FromServerUnion::release_strings() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.FromServerUnion.Strings)
  if (has_strings()) {
    clear_has_Value();
      ::Jde::Logging::Proto::Strings* temp = Value_.strings_;
    Value_.strings_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::Strings& FromServerUnion::_internal_strings() const {
  return _internal_has_strings()
      ? *Value_.strings_
      : *reinterpret_cast< ::Jde::Logging::Proto::Strings*>(&::Jde::Logging::Proto::_Strings_default_instance_);
}
inline const ::Jde::Logging::Proto::Strings& FromServerUnion::strings() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.FromServerUnion.Strings)
  return _internal_strings();
}
inline ::Jde::Logging::Proto::Strings* FromServerUnion::_internal_mutable_strings() {
  if (!_internal_has_strings()) {
    clear_Value();
    set_has_strings();
    Value_.strings_ = CreateMaybeMessage< ::Jde::Logging::Proto::Strings >(
        GetArenaNoVirtual());
  }
  return Value_.strings_;
}
inline ::Jde::Logging::Proto::Strings* FromServerUnion::mutable_strings() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.FromServerUnion.Strings)
  return _internal_mutable_strings();
}

// .Jde.Logging.Proto.LogLevels LogLevels = 4;
inline bool FromServerUnion::_internal_has_loglevels() const {
  return Value_case() == kLogLevels;
}
inline bool FromServerUnion::has_loglevels() const {
  return _internal_has_loglevels();
}
inline void FromServerUnion::set_has_loglevels() {
  _oneof_case_[0] = kLogLevels;
}
inline void FromServerUnion::clear_loglevels() {
  if (_internal_has_loglevels()) {
    delete Value_.loglevels_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::LogLevels* FromServerUnion::release_loglevels() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.FromServerUnion.LogLevels)
  if (has_loglevels()) {
    clear_has_Value();
      ::Jde::Logging::Proto::LogLevels* temp = Value_.loglevels_;
    Value_.loglevels_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::LogLevels& FromServerUnion::_internal_loglevels() const {
  return _internal_has_loglevels()
      ? *Value_.loglevels_
      : *reinterpret_cast< ::Jde::Logging::Proto::LogLevels*>(&::Jde::Logging::Proto::_LogLevels_default_instance_);
}
inline const ::Jde::Logging::Proto::LogLevels& FromServerUnion::loglevels() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.FromServerUnion.LogLevels)
  return _internal_loglevels();
}
inline ::Jde::Logging::Proto::LogLevels* FromServerUnion::_internal_mutable_loglevels() {
  if (!_internal_has_loglevels()) {
    clear_Value();
    set_has_loglevels();
    Value_.loglevels_ = CreateMaybeMessage< ::Jde::Logging::Proto::LogLevels >(
        GetArenaNoVirtual());
  }
  return Value_.loglevels_;
}
inline ::Jde::Logging::Proto::LogLevels* FromServerUnion::mutable_loglevels() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.FromServerUnion.LogLevels)
  return _internal_mutable_loglevels();
}

// .Jde.Logging.Proto.CustomMessage Custom = 5;
inline bool FromServerUnion::_internal_has_custom() const {
  return Value_case() == kCustom;
}
inline bool FromServerUnion::has_custom() const {
  return _internal_has_custom();
}
inline void FromServerUnion::set_has_custom() {
  _oneof_case_[0] = kCustom;
}
inline void FromServerUnion::clear_custom() {
  if (_internal_has_custom()) {
    delete Value_.custom_;
    clear_has_Value();
  }
}
inline ::Jde::Logging::Proto::CustomMessage* FromServerUnion::release_custom() {
  // @@protoc_insertion_point(field_release:Jde.Logging.Proto.FromServerUnion.Custom)
  if (has_custom()) {
    clear_has_Value();
      ::Jde::Logging::Proto::CustomMessage* temp = Value_.custom_;
    Value_.custom_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Logging::Proto::CustomMessage& FromServerUnion::_internal_custom() const {
  return _internal_has_custom()
      ? *Value_.custom_
      : *reinterpret_cast< ::Jde::Logging::Proto::CustomMessage*>(&::Jde::Logging::Proto::_CustomMessage_default_instance_);
}
inline const ::Jde::Logging::Proto::CustomMessage& FromServerUnion::custom() const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.FromServerUnion.Custom)
  return _internal_custom();
}
inline ::Jde::Logging::Proto::CustomMessage* FromServerUnion::_internal_mutable_custom() {
  if (!_internal_has_custom()) {
    clear_Value();
    set_has_custom();
    Value_.custom_ = CreateMaybeMessage< ::Jde::Logging::Proto::CustomMessage >(
        GetArenaNoVirtual());
  }
  return Value_.custom_;
}
inline ::Jde::Logging::Proto::CustomMessage* FromServerUnion::mutable_custom() {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.FromServerUnion.Custom)
  return _internal_mutable_custom();
}

inline bool FromServerUnion::has_Value() const {
  return Value_case() != VALUE_NOT_SET;
}
inline void FromServerUnion::clear_has_Value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline FromServerUnion::ValueCase FromServerUnion::Value_case() const {
  return FromServerUnion::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FromServer

// repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
inline int FromServer::_internal_messages_size() const {
  return messages_.size();
}
inline int FromServer::messages_size() const {
  return _internal_messages_size();
}
inline void FromServer::clear_messages() {
  messages_.Clear();
}
inline ::Jde::Logging::Proto::FromServerUnion* FromServer::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Logging.Proto.FromServer.Messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::FromServerUnion >*
FromServer::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Logging.Proto.FromServer.Messages)
  return &messages_;
}
inline const ::Jde::Logging::Proto::FromServerUnion& FromServer::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::Jde::Logging::Proto::FromServerUnion& FromServer::messages(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Logging.Proto.FromServer.Messages)
  return _internal_messages(index);
}
inline ::Jde::Logging::Proto::FromServerUnion* FromServer::_internal_add_messages() {
  return messages_.Add();
}
inline ::Jde::Logging::Proto::FromServerUnion* FromServer::add_messages() {
  // @@protoc_insertion_point(field_add:Jde.Logging.Proto.FromServer.Messages)
  return _internal_add_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Logging::Proto::FromServerUnion >&
FromServer::messages() const {
  // @@protoc_insertion_point(field_list:Jde.Logging.Proto.FromServer.Messages)
  return messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Logging
}  // namespace Jde

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Jde::Logging::Proto::ELogLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Logging::Proto::ELogLevel>() {
  return ::Jde::Logging::Proto::ELogLevel_descriptor();
}
template <> struct is_proto_enum< ::Jde::Logging::Proto::EFields> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Logging::Proto::EFields>() {
  return ::Jde::Logging::Proto::EFields_descriptor();
}
template <> struct is_proto_enum< ::Jde::Logging::Proto::EFromServer> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Logging::Proto::EFromServer>() {
  return ::Jde::Logging::Proto::EFromServer_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_messages_2eproto
