// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Jde {
namespace Logging {
namespace Proto {
PROTOBUF_CONSTEXPR Instance::Instance(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.application_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.host_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pid_)*/0
  , /*decltype(_impl_.server_log_level_)*/0
  , /*decltype(_impl_.client_log_level_)*/0
  , /*decltype(_impl_.start_time_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InstanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstanceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstanceDefaultTypeInternal() {}
  union {
    Instance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstanceDefaultTypeInternal _Instance_default_instance_;
PROTOBUF_CONSTEXPR Message::Message(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.variables_)*/{}
  , /*decltype(_impl_.time_)*/nullptr
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.messageid_)*/0u
  , /*decltype(_impl_.fileid_)*/0u
  , /*decltype(_impl_.functionid_)*/0u
  , /*decltype(_impl_.linenumber_)*/0u
  , /*decltype(_impl_.userid_)*/0u
  , /*decltype(_impl_.threadid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
PROTOBUF_CONSTEXPR SessionInfo::SessionInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.expiration_)*/nullptr
  , /*decltype(_impl_.session_id_)*/0u
  , /*decltype(_impl_.user_id_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SessionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionInfoDefaultTypeInternal() {}
  union {
    SessionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionInfoDefaultTypeInternal _SessionInfo_default_instance_;
PROTOBUF_CONSTEXPR RequestString::RequestString(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.field_)*/0
  , /*decltype(_impl_.id_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestStringDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestStringDefaultTypeInternal() {}
  union {
    RequestString _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestStringDefaultTypeInternal _RequestString_default_instance_;
PROTOBUF_CONSTEXPR Status::Status(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.details_)*/{}
  , /*decltype(_impl_.memory_)*/uint64_t{0u}
  , /*decltype(_impl_.starttime_)*/0u
  , /*decltype(_impl_.serverloglevel_)*/0
  , /*decltype(_impl_.clientloglevel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;
PROTOBUF_CONSTEXPR CustomMessage::CustomMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requestid_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CustomMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMessageDefaultTypeInternal() {}
  union {
    CustomMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMessageDefaultTypeInternal _CustomMessage_default_instance_;
PROTOBUF_CONSTEXPR CustomComplete::CustomComplete(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.requestid_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CustomCompleteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomCompleteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomCompleteDefaultTypeInternal() {}
  union {
    CustomComplete _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomCompleteDefaultTypeInternal _CustomComplete_default_instance_;
PROTOBUF_CONSTEXPR RequestSessionInfo::RequestSessionInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.session_id_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestSessionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestSessionInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestSessionInfoDefaultTypeInternal() {}
  union {
    RequestSessionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestSessionInfoDefaultTypeInternal _RequestSessionInfo_default_instance_;
PROTOBUF_CONSTEXPR ToServerUnion::ToServerUnion(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ToServerUnionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToServerUnionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToServerUnionDefaultTypeInternal() {}
  union {
    ToServerUnion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToServerUnionDefaultTypeInternal _ToServerUnion_default_instance_;
PROTOBUF_CONSTEXPR ToServer::ToServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ToServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToServerDefaultTypeInternal() {}
  union {
    ToServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToServerDefaultTypeInternal _ToServer_default_instance_;
PROTOBUF_CONSTEXPR Acknowledgement::Acknowledgement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instanceid_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AcknowledgementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AcknowledgementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AcknowledgementDefaultTypeInternal() {}
  union {
    Acknowledgement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AcknowledgementDefaultTypeInternal _Acknowledgement_default_instance_;
PROTOBUF_CONSTEXPR GenericFromServer::GenericFromServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.what_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenericFromServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenericFromServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenericFromServerDefaultTypeInternal() {}
  union {
    GenericFromServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenericFromServerDefaultTypeInternal _GenericFromServer_default_instance_;
PROTOBUF_CONSTEXPR Strings::Strings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._messages_cached_byte_size_)*/{0}
  , /*decltype(_impl_.files_)*/{}
  , /*decltype(_impl_._files_cached_byte_size_)*/{0}
  , /*decltype(_impl_.functions_)*/{}
  , /*decltype(_impl_._functions_cached_byte_size_)*/{0}
  , /*decltype(_impl_.threads_)*/{}
  , /*decltype(_impl_._threads_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringsDefaultTypeInternal() {}
  union {
    Strings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringsDefaultTypeInternal _Strings_default_instance_;
PROTOBUF_CONSTEXPR Progress::Progress(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/0
  , /*decltype(_impl_.requestid_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgressDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgressDefaultTypeInternal() {}
  union {
    Progress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgressDefaultTypeInternal _Progress_default_instance_;
PROTOBUF_CONSTEXPR LogLevels::LogLevels(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.server_)*/0
  , /*decltype(_impl_.client_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogLevelsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogLevelsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogLevelsDefaultTypeInternal() {}
  union {
    LogLevels _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogLevelsDefaultTypeInternal _LogLevels_default_instance_;
PROTOBUF_CONSTEXPR FromServerUnion::FromServerUnion(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FromServerUnionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FromServerUnionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FromServerUnionDefaultTypeInternal() {}
  union {
    FromServerUnion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FromServerUnionDefaultTypeInternal _FromServerUnion_default_instance_;
PROTOBUF_CONSTEXPR FromServer::FromServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FromServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FromServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FromServerDefaultTypeInternal() {}
  union {
    FromServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FromServerDefaultTypeInternal _FromServer_default_instance_;
}  // namespace Proto
}  // namespace Logging
}  // namespace Jde
static ::_pb::Metadata file_level_metadata_messages_2eproto[17];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_messages_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_messages_2eproto = nullptr;

const uint32_t TableStruct_messages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _impl_.application_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _impl_.host_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _impl_.pid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _impl_.server_log_level_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _impl_.client_log_level_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Instance, _impl_.start_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.time_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.messageid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.fileid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.functionid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.linenumber_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.userid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.threadid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Message, _impl_.variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::SessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::SessionInfo, _impl_.expiration_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::SessionInfo, _impl_.session_id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::SessionInfo, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, _impl_.field_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestString, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _impl_.starttime_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _impl_.memory_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _impl_.serverloglevel_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _impl_.clientloglevel_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Status, _impl_.details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomMessage, _impl_.requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomMessage, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::CustomComplete, _impl_.requestid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::RequestSessionInfo, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, _impl_.Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServer, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Acknowledgement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Acknowledgement, _impl_.instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::GenericFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::GenericFromServer, _impl_.what_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::GenericFromServer, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, _impl_.messages_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, _impl_.files_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, _impl_.functions_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Strings, _impl_.threads_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Progress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Progress, _impl_.requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::Progress, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::LogLevels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::LogLevels, _impl_.server_),
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::LogLevels, _impl_.client_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, _impl_.Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _split_
  ~0u,  // no sizeof(Split)
  PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServer, _impl_.messages_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Jde::Logging::Proto::Instance)},
  { 14, -1, -1, sizeof(::Jde::Logging::Proto::Message)},
  { 31, -1, -1, sizeof(::Jde::Logging::Proto::SessionInfo)},
  { 42, -1, -1, sizeof(::Jde::Logging::Proto::RequestString)},
  { 53, -1, -1, sizeof(::Jde::Logging::Proto::Status)},
  { 66, -1, -1, sizeof(::Jde::Logging::Proto::CustomMessage)},
  { 76, -1, -1, sizeof(::Jde::Logging::Proto::CustomComplete)},
  { 85, -1, -1, sizeof(::Jde::Logging::Proto::RequestSessionInfo)},
  { 94, -1, -1, sizeof(::Jde::Logging::Proto::ToServerUnion)},
  { 110, -1, -1, sizeof(::Jde::Logging::Proto::ToServer)},
  { 119, -1, -1, sizeof(::Jde::Logging::Proto::Acknowledgement)},
  { 128, -1, -1, sizeof(::Jde::Logging::Proto::GenericFromServer)},
  { 138, -1, -1, sizeof(::Jde::Logging::Proto::Strings)},
  { 150, -1, -1, sizeof(::Jde::Logging::Proto::Progress)},
  { 160, -1, -1, sizeof(::Jde::Logging::Proto::LogLevels)},
  { 170, -1, -1, sizeof(::Jde::Logging::Proto::FromServerUnion)},
  { 186, -1, -1, sizeof(::Jde::Logging::Proto::FromServer)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Jde::Logging::Proto::_Instance_default_instance_._instance,
  &::Jde::Logging::Proto::_Message_default_instance_._instance,
  &::Jde::Logging::Proto::_SessionInfo_default_instance_._instance,
  &::Jde::Logging::Proto::_RequestString_default_instance_._instance,
  &::Jde::Logging::Proto::_Status_default_instance_._instance,
  &::Jde::Logging::Proto::_CustomMessage_default_instance_._instance,
  &::Jde::Logging::Proto::_CustomComplete_default_instance_._instance,
  &::Jde::Logging::Proto::_RequestSessionInfo_default_instance_._instance,
  &::Jde::Logging::Proto::_ToServerUnion_default_instance_._instance,
  &::Jde::Logging::Proto::_ToServer_default_instance_._instance,
  &::Jde::Logging::Proto::_Acknowledgement_default_instance_._instance,
  &::Jde::Logging::Proto::_GenericFromServer_default_instance_._instance,
  &::Jde::Logging::Proto::_Strings_default_instance_._instance,
  &::Jde::Logging::Proto::_Progress_default_instance_._instance,
  &::Jde::Logging::Proto::_LogLevels_default_instance_._instance,
  &::Jde::Logging::Proto::_FromServerUnion_default_instance_._instance,
  &::Jde::Logging::Proto::_FromServer_default_instance_._instance,
};

const char descriptor_table_protodef_messages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016messages.proto\022\021Jde.Logging.Proto\032\037goo"
  "gle/protobuf/timestamp.proto\"\276\001\n\010Instanc"
  "e\022\023\n\013application\030\001 \001(\t\022\014\n\004host\030\002 \001(\t\022\013\n\003"
  "pid\030\003 \001(\005\0226\n\020server_log_level\030\004 \001(\0162\034.Jd"
  "e.Logging.Proto.ELogLevel\0226\n\020client_log_"
  "level\030\005 \001(\0162\034.Jde.Logging.Proto.ELogLeve"
  "l\022\022\n\nstart_time\030\006 \001(\r\"\340\001\n\007Message\022(\n\004Tim"
  "e\030\001 \001(\0132\032.google.protobuf.Timestamp\022+\n\005L"
  "evel\030\002 \001(\0162\034.Jde.Logging.Proto.ELogLevel"
  "\022\021\n\tMessageId\030\003 \001(\r\022\016\n\006FileId\030\004 \001(\r\022\022\n\nF"
  "unctionId\030\005 \001(\r\022\022\n\nLineNumber\030\006 \001(\r\022\016\n\006U"
  "serId\030\007 \001(\r\022\020\n\010ThreadId\030\010 \001(\004\022\021\n\tVariabl"
  "es\030\t \003(\t\"b\n\013SessionInfo\022.\n\nexpiration\030\001 "
  "\001(\0132\032.google.protobuf.Timestamp\022\022\n\nsessi"
  "on_id\030\002 \001(\r\022\017\n\007user_id\030\003 \001(\r\"U\n\rRequestS"
  "tring\022)\n\005Field\030\001 \001(\0162\032.Jde.Logging.Proto"
  ".EFields\022\n\n\002Id\030\002 \001(\r\022\r\n\005Value\030\003 \001(\t\"\250\001\n\006"
  "Status\022\021\n\tStartTime\030\001 \001(\r\022\016\n\006Memory\030\002 \001("
  "\004\0224\n\016ServerLogLevel\030\003 \001(\0162\034.Jde.Logging."
  "Proto.ELogLevel\0224\n\016ClientLogLevel\030\004 \001(\0162"
  "\034.Jde.Logging.Proto.ELogLevel\022\017\n\007Details"
  "\030\005 \003(\t\"3\n\rCustomMessage\022\021\n\tRequestId\030\001 \001"
  "(\r\022\017\n\007Message\030\002 \001(\014\"#\n\016CustomComplete\022\021\n"
  "\tRequestId\030\001 \001(\r\"(\n\022RequestSessionInfo\022\022"
  "\n\nsession_id\030\001 \001(\r\"\203\003\n\rToServerUnion\022/\n\010"
  "Instance\030\001 \001(\0132\033.Jde.Logging.Proto.Insta"
  "nceH\000\022-\n\007Message\030\002 \001(\0132\032.Jde.Logging.Pro"
  "to.MessageH\000\0222\n\006String\030\003 \001(\0132 .Jde.Loggi"
  "ng.Proto.RequestStringH\000\022+\n\006Status\030\004 \001(\013"
  "2\031.Jde.Logging.Proto.StatusH\000\0222\n\006Custom\030"
  "\005 \001(\0132 .Jde.Logging.Proto.CustomMessageH"
  "\000\0225\n\010Complete\030\006 \001(\0132!.Jde.Logging.Proto."
  "CustomCompleteH\000\022=\n\014session_info\030\007 \001(\0132%"
  ".Jde.Logging.Proto.RequestSessionInfoH\000B"
  "\007\n\005Value\">\n\010ToServer\0222\n\010Messages\030\001 \003(\0132 "
  ".Jde.Logging.Proto.ToServerUnion\"%\n\017Ackn"
  "owledgement\022\022\n\nInstanceId\030\001 \001(\r\"V\n\021Gener"
  "icFromServer\022,\n\004What\030\001 \001(\0162\036.Jde.Logging"
  ".Proto.EFromServer\022\023\n\013Description\030\002 \001(\t\""
  "N\n\007Strings\022\020\n\010Messages\030\001 \003(\r\022\r\n\005Files\030\002 "
  "\003(\r\022\021\n\tFunctions\030\003 \003(\r\022\017\n\007Threads\030\004 \003(\r\""
  ",\n\010Progress\022\021\n\tRequestId\030\001 \001(\r\022\r\n\005Value\030"
  "\002 \001(\001\"g\n\tLogLevels\022,\n\006Server\030\001 \001(\0162\034.Jde"
  ".Logging.Proto.ELogLevel\022,\n\006Client\030\002 \001(\016"
  "2\034.Jde.Logging.Proto.ELogLevel\"\221\003\n\017FromS"
  "erverUnion\022=\n\017Acknowledgement\030\001 \001(\0132\".Jd"
  "e.Logging.Proto.AcknowledgementH\000\0227\n\007Gen"
  "eric\030\002 \001(\0132$.Jde.Logging.Proto.GenericFr"
  "omServerH\000\022-\n\007Strings\030\003 \001(\0132\032.Jde.Loggin"
  "g.Proto.StringsH\000\0221\n\tLogLevels\030\004 \001(\0132\034.J"
  "de.Logging.Proto.LogLevelsH\000\0222\n\006Custom\030\005"
  " \001(\0132 .Jde.Logging.Proto.CustomMessageH\000"
  "\022/\n\010Progress\030\006 \001(\0132\033.Jde.Logging.Proto.P"
  "rogressH\000\0226\n\014session_info\030\007 \001(\0132\036.Jde.Lo"
  "gging.Proto.SessionInfoH\000B\007\n\005Value\"B\n\nFr"
  "omServer\0224\n\010Messages\030\001 \003(\0132\".Jde.Logging"
  ".Proto.FromServerUnion*~\n\tELogLevel\022\t\n\005T"
  "race\020\000\022\t\n\005Debug\020\001\022\017\n\013Information\020\002\022\013\n\007Wa"
  "rning\020\003\022\t\n\005Error\020\004\022\014\n\010Critical\020\005\022\020\n\014LogL"
  "evelNone\020\006\022\022\n\005NoLog\020\377\377\377\377\377\377\377\377\377\001*\370\001\n\007EFiel"
  "ds\022\016\n\nFieldsNone\020\000\022\022\n\016TimestampField\020\001\022\r"
  "\n\tMessageId\020\002\022\020\n\014MessageField\020\004\022\t\n\005Level"
  "\020\010\022\n\n\006FileId\020\020\022\010\n\004File\020 \022\016\n\nFunctionId\020@"
  "\022\r\n\010Function\020\200\001\022\017\n\nLineNumber\020\200\002\022\013\n\006User"
  "Id\020\200\004\022\t\n\004User\020\200\010\022\r\n\010ThreadId\020\200\020\022\013\n\006Threa"
  "d\020\200 \022\022\n\rVariableCount\020\200@\022\017\n\tSessionId\020\200\200"
  "\001*2\n\013EFromServer\022\010\n\004Ping\020\000\022\n\n\006Error_\020\001\022\r"
  "\n\tReadError\020\002b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_messages_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_messages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_messages_2eproto = {
    false, false, 2701, descriptor_table_protodef_messages_2eproto,
    "messages.proto",
    &descriptor_table_messages_2eproto_once, descriptor_table_messages_2eproto_deps, 1, 17,
    schemas, file_default_instances, TableStruct_messages_2eproto::offsets,
    file_level_metadata_messages_2eproto, file_level_enum_descriptors_messages_2eproto,
    file_level_service_descriptors_messages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_messages_2eproto_getter() {
  return &descriptor_table_messages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_messages_2eproto(&descriptor_table_messages_2eproto);
namespace Jde {
namespace Logging {
namespace Proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELogLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messages_2eproto);
  return file_level_enum_descriptors_messages_2eproto[0];
}
bool ELogLevel_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFields_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messages_2eproto);
  return file_level_enum_descriptors_messages_2eproto[1];
}
bool EFields_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFromServer_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messages_2eproto);
  return file_level_enum_descriptors_messages_2eproto[2];
}
bool EFromServer_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Instance::_Internal {
 public:
};

Instance::Instance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.Instance)
}
Instance::Instance(const Instance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Instance* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.application_){}
    , decltype(_impl_.host_){}
    , decltype(_impl_.pid_){}
    , decltype(_impl_.server_log_level_){}
    , decltype(_impl_.client_log_level_){}
    , decltype(_impl_.start_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.application_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.application_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_application().empty()) {
    _this->_impl_.application_.Set(from._internal_application(), 
      _this->GetArenaForAllocation());
  }
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    _this->_impl_.host_.Set(from._internal_host(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.pid_, &from._impl_.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.start_time_) -
    reinterpret_cast<char*>(&_impl_.pid_)) + sizeof(_impl_.start_time_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Instance)
}

inline void Instance::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.application_){}
    , decltype(_impl_.host_){}
    , decltype(_impl_.pid_){0}
    , decltype(_impl_.server_log_level_){0}
    , decltype(_impl_.client_log_level_){0}
    , decltype(_impl_.start_time_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.application_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.application_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Instance)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Instance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.application_.Destroy();
  _impl_.host_.Destroy();
}

void Instance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Instance)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.application_.ClearToEmpty();
  _impl_.host_.ClearToEmpty();
  ::memset(&_impl_.pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.start_time_) -
      reinterpret_cast<char*>(&_impl_.pid_)) + sizeof(_impl_.start_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Instance::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string application = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_application();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Jde.Logging.Proto.Instance.application"));
        } else
          goto handle_unusual;
        continue;
      // string host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Jde.Logging.Proto.Instance.host"));
        } else
          goto handle_unusual;
        continue;
      // int32 pid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel server_log_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_server_log_level(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel client_log_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_client_log_level(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 start_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Instance::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Instance)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string application = 1;
  if (!this->_internal_application().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application().data(), static_cast<int>(this->_internal_application().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Instance.application");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_application(), target);
  }

  // string host = 2;
  if (!this->_internal_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Instance.host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_host(), target);
  }

  // int32 pid = 3;
  if (this->_internal_pid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_pid(), target);
  }

  // .Jde.Logging.Proto.ELogLevel server_log_level = 4;
  if (this->_internal_server_log_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_server_log_level(), target);
  }

  // .Jde.Logging.Proto.ELogLevel client_log_level = 5;
  if (this->_internal_client_log_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_client_log_level(), target);
  }

  // uint32 start_time = 6;
  if (this->_internal_start_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_start_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Instance)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string application = 1;
  if (!this->_internal_application().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_application());
  }

  // string host = 2;
  if (!this->_internal_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // int32 pid = 3;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pid());
  }

  // .Jde.Logging.Proto.ELogLevel server_log_level = 4;
  if (this->_internal_server_log_level() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_server_log_level());
  }

  // .Jde.Logging.Proto.ELogLevel client_log_level = 5;
  if (this->_internal_client_log_level() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_client_log_level());
  }

  // uint32 start_time = 6;
  if (this->_internal_start_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_start_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Instance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Instance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Instance::GetClassData() const { return &_class_data_; }


void Instance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Instance*>(&to_msg);
  auto& from = static_cast<const Instance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Instance)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_application().empty()) {
    _this->_internal_set_application(from._internal_application());
  }
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if (from._internal_pid() != 0) {
    _this->_internal_set_pid(from._internal_pid());
  }
  if (from._internal_server_log_level() != 0) {
    _this->_internal_set_server_log_level(from._internal_server_log_level());
  }
  if (from._internal_client_log_level() != 0) {
    _this->_internal_set_client_log_level(from._internal_client_log_level());
  }
  if (from._internal_start_time() != 0) {
    _this->_internal_set_start_time(from._internal_start_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::InternalSwap(Instance* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.application_, lhs_arena,
      &other->_impl_.application_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.host_, lhs_arena,
      &other->_impl_.host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Instance, _impl_.start_time_)
      + sizeof(Instance::_impl_.start_time_)
      - PROTOBUF_FIELD_OFFSET(Instance, _impl_.pid_)>(
          reinterpret_cast<char*>(&_impl_.pid_),
          reinterpret_cast<char*>(&other->_impl_.pid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Instance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[0]);
}

// ===================================================================

class Message::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& time(const Message* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Message::_Internal::time(const Message* msg) {
  return *msg->_impl_.time_;
}
void Message::clear_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.time_ != nullptr) {
    delete _impl_.time_;
  }
  _impl_.time_ = nullptr;
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Message* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){from._impl_.variables_}
    , decltype(_impl_.time_){nullptr}
    , decltype(_impl_.level_){}
    , decltype(_impl_.messageid_){}
    , decltype(_impl_.fileid_){}
    , decltype(_impl_.functionid_){}
    , decltype(_impl_.linenumber_){}
    , decltype(_impl_.userid_){}
    , decltype(_impl_.threadid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_time()) {
    _this->_impl_.time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.time_);
  }
  ::memcpy(&_impl_.level_, &from._impl_.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.threadid_) -
    reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.threadid_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Message)
}

inline void Message::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.variables_){arena}
    , decltype(_impl_.time_){nullptr}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.messageid_){0u}
    , decltype(_impl_.fileid_){0u}
    , decltype(_impl_.functionid_){0u}
    , decltype(_impl_.linenumber_){0u}
    , decltype(_impl_.userid_){0u}
    , decltype(_impl_.threadid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Message)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.variables_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.time_;
}

void Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Message)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variables_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.time_ != nullptr) {
    delete _impl_.time_;
  }
  _impl_.time_ = nullptr;
  ::memset(&_impl_.level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.threadid_) -
      reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.threadid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp Time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_level(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 MessageId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.messageid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FileId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.fileid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FunctionId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.functionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LineNumber = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.linenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 UserId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 ThreadId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.threadid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string Variables = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_variables();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "Jde.Logging.Proto.Message.Variables"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Message)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp Time = 1;
  if (this->_internal_has_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.ELogLevel Level = 2;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_level(), target);
  }

  // uint32 MessageId = 3;
  if (this->_internal_messageid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_messageid(), target);
  }

  // uint32 FileId = 4;
  if (this->_internal_fileid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_fileid(), target);
  }

  // uint32 FunctionId = 5;
  if (this->_internal_functionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_functionid(), target);
  }

  // uint32 LineNumber = 6;
  if (this->_internal_linenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_linenumber(), target);
  }

  // uint32 UserId = 7;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_userid(), target);
  }

  // uint64 ThreadId = 8;
  if (this->_internal_threadid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal_threadid(), target);
  }

  // repeated string Variables = 9;
  for (int i = 0, n = this->_internal_variables_size(); i < n; i++) {
    const auto& s = this->_internal_variables(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Message.Variables");
    target = stream->WriteString(9, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Message)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Variables = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.variables_.size());
  for (int i = 0, n = _impl_.variables_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.variables_.Get(i));
  }

  // .google.protobuf.Timestamp Time = 1;
  if (this->_internal_has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.time_);
  }

  // .Jde.Logging.Proto.ELogLevel Level = 2;
  if (this->_internal_level() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_level());
  }

  // uint32 MessageId = 3;
  if (this->_internal_messageid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_messageid());
  }

  // uint32 FileId = 4;
  if (this->_internal_fileid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_fileid());
  }

  // uint32 FunctionId = 5;
  if (this->_internal_functionid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_functionid());
  }

  // uint32 LineNumber = 6;
  if (this->_internal_linenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_linenumber());
  }

  // uint32 UserId = 7;
  if (this->_internal_userid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_userid());
  }

  // uint64 ThreadId = 8;
  if (this->_internal_threadid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_threadid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Message::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message::GetClassData() const { return &_class_data_; }


void Message::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Message)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.variables_.MergeFrom(from._impl_.variables_);
  if (from._internal_has_time()) {
    _this->_internal_mutable_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_time());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_messageid() != 0) {
    _this->_internal_set_messageid(from._internal_messageid());
  }
  if (from._internal_fileid() != 0) {
    _this->_internal_set_fileid(from._internal_fileid());
  }
  if (from._internal_functionid() != 0) {
    _this->_internal_set_functionid(from._internal_functionid());
  }
  if (from._internal_linenumber() != 0) {
    _this->_internal_set_linenumber(from._internal_linenumber());
  }
  if (from._internal_userid() != 0) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (from._internal_threadid() != 0) {
    _this->_internal_set_threadid(from._internal_threadid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.variables_.InternalSwap(&other->_impl_.variables_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.threadid_)
      + sizeof(Message::_impl_.threadid_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[1]);
}

// ===================================================================

class SessionInfo::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& expiration(const SessionInfo* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SessionInfo::_Internal::expiration(const SessionInfo* msg) {
  return *msg->_impl_.expiration_;
}
void SessionInfo::clear_expiration() {
  if (GetArenaForAllocation() == nullptr && _impl_.expiration_ != nullptr) {
    delete _impl_.expiration_;
  }
  _impl_.expiration_ = nullptr;
}
SessionInfo::SessionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.SessionInfo)
}
SessionInfo::SessionInfo(const SessionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.expiration_){nullptr}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_expiration()) {
    _this->_impl_.expiration_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.expiration_);
  }
  ::memcpy(&_impl_.session_id_, &from._impl_.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.user_id_) -
    reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.user_id_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.SessionInfo)
}

inline void SessionInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.expiration_){nullptr}
    , decltype(_impl_.session_id_){0u}
    , decltype(_impl_.user_id_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SessionInfo::~SessionInfo() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.SessionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.expiration_;
}

void SessionInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.SessionInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.expiration_ != nullptr) {
    delete _impl_.expiration_;
  }
  _impl_.expiration_ = nullptr;
  ::memset(&_impl_.session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.user_id_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.user_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp expiration = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 user_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.SessionInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp expiration = 1;
  if (this->_internal_has_expiration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::expiration(this),
        _Internal::expiration(this).GetCachedSize(), target, stream);
  }

  // uint32 session_id = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_session_id(), target);
  }

  // uint32 user_id = 3;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.SessionInfo)
  return target;
}

size_t SessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.SessionInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp expiration = 1;
  if (this->_internal_has_expiration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expiration_);
  }

  // uint32 session_id = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_session_id());
  }

  // uint32 user_id = 3;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionInfo::GetClassData() const { return &_class_data_; }


void SessionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionInfo*>(&to_msg);
  auto& from = static_cast<const SessionInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.SessionInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_expiration()) {
    _this->_internal_mutable_expiration()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_expiration());
  }
  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionInfo::CopyFrom(const SessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.SessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionInfo::IsInitialized() const {
  return true;
}

void SessionInfo::InternalSwap(SessionInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SessionInfo, _impl_.user_id_)
      + sizeof(SessionInfo::_impl_.user_id_)
      - PROTOBUF_FIELD_OFFSET(SessionInfo, _impl_.expiration_)>(
          reinterpret_cast<char*>(&_impl_.expiration_),
          reinterpret_cast<char*>(&other->_impl_.expiration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[2]);
}

// ===================================================================

class RequestString::_Internal {
 public:
};

RequestString::RequestString(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.RequestString)
}
RequestString::RequestString(const RequestString& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestString* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , decltype(_impl_.field_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.field_, &from._impl_.field_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.field_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.RequestString)
}

inline void RequestString::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , decltype(_impl_.field_){0}
    , decltype(_impl_.id_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestString::~RequestString() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.RequestString)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestString::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
}

void RequestString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestString::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.RequestString)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  ::memset(&_impl_.field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.field_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestString::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.EFields Field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_field(static_cast<::Jde::Logging::Proto::EFields>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 Id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Jde.Logging.Proto.RequestString.Value"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestString::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.RequestString)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.EFields Field = 1;
  if (this->_internal_field() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_field(), target);
  }

  // uint32 Id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // string Value = 3;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.RequestString.Value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.RequestString)
  return target;
}

size_t RequestString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.RequestString)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Value = 3;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // .Jde.Logging.Proto.EFields Field = 1;
  if (this->_internal_field() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_field());
  }

  // uint32 Id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestString::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestString::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestString::GetClassData() const { return &_class_data_; }


void RequestString::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestString*>(&to_msg);
  auto& from = static_cast<const RequestString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.RequestString)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_field() != 0) {
    _this->_internal_set_field(from._internal_field());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestString::CopyFrom(const RequestString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.RequestString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestString::IsInitialized() const {
  return true;
}

void RequestString::InternalSwap(RequestString* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestString, _impl_.id_)
      + sizeof(RequestString::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(RequestString, _impl_.field_)>(
          reinterpret_cast<char*>(&_impl_.field_),
          reinterpret_cast<char*>(&other->_impl_.field_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[3]);
}

// ===================================================================

class Status::_Internal {
 public:
};

Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Status* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.details_){from._impl_.details_}
    , decltype(_impl_.memory_){}
    , decltype(_impl_.starttime_){}
    , decltype(_impl_.serverloglevel_){}
    , decltype(_impl_.clientloglevel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.memory_, &from._impl_.memory_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.clientloglevel_) -
    reinterpret_cast<char*>(&_impl_.memory_)) + sizeof(_impl_.clientloglevel_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Status)
}

inline void Status::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.details_){arena}
    , decltype(_impl_.memory_){uint64_t{0u}}
    , decltype(_impl_.starttime_){0u}
    , decltype(_impl_.serverloglevel_){0}
    , decltype(_impl_.clientloglevel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Status)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.details_.~RepeatedPtrField();
}

void Status::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Status)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  ::memset(&_impl_.memory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.clientloglevel_) -
      reinterpret_cast<char*>(&_impl_.memory_)) + sizeof(_impl_.clientloglevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 StartTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 Memory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.memory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_serverloglevel(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_clientloglevel(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string Details = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_details();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "Jde.Logging.Proto.Status.Details"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Status::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Status)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 StartTime = 1;
  if (this->_internal_starttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_starttime(), target);
  }

  // uint64 Memory = 2;
  if (this->_internal_memory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_memory(), target);
  }

  // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
  if (this->_internal_serverloglevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_serverloglevel(), target);
  }

  // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
  if (this->_internal_clientloglevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_clientloglevel(), target);
  }

  // repeated string Details = 5;
  for (int i = 0, n = this->_internal_details_size(); i < n; i++) {
    const auto& s = this->_internal_details(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.Status.Details");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Status)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Details = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.details_.size());
  for (int i = 0, n = _impl_.details_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.details_.Get(i));
  }

  // uint64 Memory = 2;
  if (this->_internal_memory() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_memory());
  }

  // uint32 StartTime = 1;
  if (this->_internal_starttime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_starttime());
  }

  // .Jde.Logging.Proto.ELogLevel ServerLogLevel = 3;
  if (this->_internal_serverloglevel() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_serverloglevel());
  }

  // .Jde.Logging.Proto.ELogLevel ClientLogLevel = 4;
  if (this->_internal_clientloglevel() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_clientloglevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Status::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Status::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Status::GetClassData() const { return &_class_data_; }


void Status::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Status)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.details_.MergeFrom(from._impl_.details_);
  if (from._internal_memory() != 0) {
    _this->_internal_set_memory(from._internal_memory());
  }
  if (from._internal_starttime() != 0) {
    _this->_internal_set_starttime(from._internal_starttime());
  }
  if (from._internal_serverloglevel() != 0) {
    _this->_internal_set_serverloglevel(from._internal_serverloglevel());
  }
  if (from._internal_clientloglevel() != 0) {
    _this->_internal_set_clientloglevel(from._internal_clientloglevel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, _impl_.clientloglevel_)
      + sizeof(Status::_impl_.clientloglevel_)
      - PROTOBUF_FIELD_OFFSET(Status, _impl_.memory_)>(
          reinterpret_cast<char*>(&_impl_.memory_),
          reinterpret_cast<char*>(&other->_impl_.memory_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[4]);
}

// ===================================================================

class CustomMessage::_Internal {
 public:
};

CustomMessage::CustomMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.CustomMessage)
}
CustomMessage::CustomMessage(const CustomMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.requestid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.requestid_ = from._impl_.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.CustomMessage)
}

inline void CustomMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.requestid_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomMessage::~CustomMessage() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.CustomMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void CustomMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.CustomMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.requestid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.CustomMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->_internal_requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requestid(), target);
  }

  // bytes Message = 2;
  if (!this->_internal_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.CustomMessage)
  return target;
}

size_t CustomMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.CustomMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // uint32 RequestId = 1;
  if (this->_internal_requestid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requestid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomMessage::GetClassData() const { return &_class_data_; }


void CustomMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomMessage*>(&to_msg);
  auto& from = static_cast<const CustomMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.CustomMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_requestid() != 0) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMessage::CopyFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomMessage::IsInitialized() const {
  return true;
}

void CustomMessage::InternalSwap(CustomMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.requestid_, other->_impl_.requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[5]);
}

// ===================================================================

class CustomComplete::_Internal {
 public:
};

CustomComplete::CustomComplete(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.CustomComplete)
}
CustomComplete::CustomComplete(const CustomComplete& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomComplete* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.requestid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.requestid_ = from._impl_.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.CustomComplete)
}

inline void CustomComplete::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.requestid_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CustomComplete::~CustomComplete() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.CustomComplete)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomComplete::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CustomComplete::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.CustomComplete)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requestid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomComplete::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomComplete::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.CustomComplete)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->_internal_requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requestid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.CustomComplete)
  return target;
}

size_t CustomComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.CustomComplete)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->_internal_requestid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requestid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomComplete::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomComplete::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomComplete::GetClassData() const { return &_class_data_; }


void CustomComplete::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomComplete*>(&to_msg);
  auto& from = static_cast<const CustomComplete&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.CustomComplete)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_requestid() != 0) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomComplete::CopyFrom(const CustomComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.CustomComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomComplete::IsInitialized() const {
  return true;
}

void CustomComplete::InternalSwap(CustomComplete* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.requestid_, other->_impl_.requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomComplete::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[6]);
}

// ===================================================================

class RequestSessionInfo::_Internal {
 public:
};

RequestSessionInfo::RequestSessionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.RequestSessionInfo)
}
RequestSessionInfo::RequestSessionInfo(const RequestSessionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestSessionInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.session_id_ = from._impl_.session_id_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.RequestSessionInfo)
}

inline void RequestSessionInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestSessionInfo::~RequestSessionInfo() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.RequestSessionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestSessionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestSessionInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestSessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.RequestSessionInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestSessionInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestSessionInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.RequestSessionInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.RequestSessionInfo)
  return target;
}

size_t RequestSessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.RequestSessionInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestSessionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestSessionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestSessionInfo::GetClassData() const { return &_class_data_; }


void RequestSessionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestSessionInfo*>(&to_msg);
  auto& from = static_cast<const RequestSessionInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.RequestSessionInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_session_id() != 0) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestSessionInfo::CopyFrom(const RequestSessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.RequestSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestSessionInfo::IsInitialized() const {
  return true;
}

void RequestSessionInfo::InternalSwap(RequestSessionInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestSessionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[7]);
}

// ===================================================================

class ToServerUnion::_Internal {
 public:
  static constexpr int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::ToServerUnion, _impl_._oneof_case_);
  static const ::Jde::Logging::Proto::Instance& instance(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::Message& message(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::RequestString& string(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::Status& status(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::CustomMessage& custom(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::CustomComplete& complete(const ToServerUnion* msg);
  static const ::Jde::Logging::Proto::RequestSessionInfo& session_info(const ToServerUnion* msg);
};

const ::Jde::Logging::Proto::Instance&
ToServerUnion::_Internal::instance(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.instance_;
}
const ::Jde::Logging::Proto::Message&
ToServerUnion::_Internal::message(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.message_;
}
const ::Jde::Logging::Proto::RequestString&
ToServerUnion::_Internal::string(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.string_;
}
const ::Jde::Logging::Proto::Status&
ToServerUnion::_Internal::status(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.status_;
}
const ::Jde::Logging::Proto::CustomMessage&
ToServerUnion::_Internal::custom(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.custom_;
}
const ::Jde::Logging::Proto::CustomComplete&
ToServerUnion::_Internal::complete(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.complete_;
}
const ::Jde::Logging::Proto::RequestSessionInfo&
ToServerUnion::_Internal::session_info(const ToServerUnion* msg) {
  return *msg->_impl_.Value_.session_info_;
}
void ToServerUnion::set_allocated_instance(::Jde::Logging::Proto::Instance* instance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (instance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(instance);
    if (message_arena != submessage_arena) {
      instance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, instance, submessage_arena);
    }
    set_has_instance();
    _impl_.Value_.instance_ = instance;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Instance)
}
void ToServerUnion::set_allocated_message(::Jde::Logging::Proto::Message* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(message);
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    _impl_.Value_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Message)
}
void ToServerUnion::set_allocated_string(::Jde::Logging::Proto::RequestString* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(string);
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    _impl_.Value_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.String)
}
void ToServerUnion::set_allocated_status(::Jde::Logging::Proto::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(status);
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    set_has_status();
    _impl_.Value_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Status)
}
void ToServerUnion::set_allocated_custom(::Jde::Logging::Proto::CustomMessage* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.Value_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Custom)
}
void ToServerUnion::set_allocated_complete(::Jde::Logging::Proto::CustomComplete* complete) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (complete) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(complete);
    if (message_arena != submessage_arena) {
      complete = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, complete, submessage_arena);
    }
    set_has_complete();
    _impl_.Value_.complete_ = complete;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.Complete)
}
void ToServerUnion::set_allocated_session_info(::Jde::Logging::Proto::RequestSessionInfo* session_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (session_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(session_info);
    if (message_arena != submessage_arena) {
      session_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, session_info, submessage_arena);
    }
    set_has_session_info();
    _impl_.Value_.session_info_ = session_info;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.ToServerUnion.session_info)
}
ToServerUnion::ToServerUnion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.ToServerUnion)
}
ToServerUnion::ToServerUnion(const ToServerUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToServerUnion* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kInstance: {
      _this->_internal_mutable_instance()->::Jde::Logging::Proto::Instance::MergeFrom(
          from._internal_instance());
      break;
    }
    case kMessage: {
      _this->_internal_mutable_message()->::Jde::Logging::Proto::Message::MergeFrom(
          from._internal_message());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Jde::Logging::Proto::RequestString::MergeFrom(
          from._internal_string());
      break;
    }
    case kStatus: {
      _this->_internal_mutable_status()->::Jde::Logging::Proto::Status::MergeFrom(
          from._internal_status());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(
          from._internal_custom());
      break;
    }
    case kComplete: {
      _this->_internal_mutable_complete()->::Jde::Logging::Proto::CustomComplete::MergeFrom(
          from._internal_complete());
      break;
    }
    case kSessionInfo: {
      _this->_internal_mutable_session_info()->::Jde::Logging::Proto::RequestSessionInfo::MergeFrom(
          from._internal_session_info());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.ToServerUnion)
}

inline void ToServerUnion::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Value();
}

ToServerUnion::~ToServerUnion() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.ToServerUnion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToServerUnion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Value()) {
    clear_Value();
  }
}

void ToServerUnion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToServerUnion::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Logging.Proto.ToServerUnion)
  switch (Value_case()) {
    case kInstance: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.instance_;
      }
      break;
    }
    case kMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.message_;
      }
      break;
    }
    case kString: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.string_;
      }
      break;
    }
    case kStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.status_;
      }
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.custom_;
      }
      break;
    }
    case kComplete: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.complete_;
      }
      break;
    }
    case kSessionInfo: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.session_info_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void ToServerUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.ToServerUnion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToServerUnion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.Instance Instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_instance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Message Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.RequestString String = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Status Status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.CustomMessage Custom = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.CustomComplete Complete = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_complete(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.RequestSessionInfo session_info = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_session_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToServerUnion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.ToServerUnion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.Instance Instance = 1;
  if (_internal_has_instance()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::instance(this),
        _Internal::instance(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.Message Message = 2;
  if (_internal_has_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::message(this),
        _Internal::message(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.RequestString String = 3;
  if (_internal_has_string()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::string(this),
        _Internal::string(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.Status Status = 4;
  if (_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.CustomMessage Custom = 5;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.CustomComplete Complete = 6;
  if (_internal_has_complete()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::complete(this),
        _Internal::complete(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.RequestSessionInfo session_info = 7;
  if (_internal_has_session_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::session_info(this),
        _Internal::session_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.ToServerUnion)
  return target;
}

size_t ToServerUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.ToServerUnion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // .Jde.Logging.Proto.Instance Instance = 1;
    case kInstance: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.instance_);
      break;
    }
    // .Jde.Logging.Proto.Message Message = 2;
    case kMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.message_);
      break;
    }
    // .Jde.Logging.Proto.RequestString String = 3;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.string_);
      break;
    }
    // .Jde.Logging.Proto.Status Status = 4;
    case kStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.status_);
      break;
    }
    // .Jde.Logging.Proto.CustomMessage Custom = 5;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.custom_);
      break;
    }
    // .Jde.Logging.Proto.CustomComplete Complete = 6;
    case kComplete: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.complete_);
      break;
    }
    // .Jde.Logging.Proto.RequestSessionInfo session_info = 7;
    case kSessionInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.session_info_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToServerUnion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToServerUnion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToServerUnion::GetClassData() const { return &_class_data_; }


void ToServerUnion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToServerUnion*>(&to_msg);
  auto& from = static_cast<const ToServerUnion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.ToServerUnion)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kInstance: {
      _this->_internal_mutable_instance()->::Jde::Logging::Proto::Instance::MergeFrom(
          from._internal_instance());
      break;
    }
    case kMessage: {
      _this->_internal_mutable_message()->::Jde::Logging::Proto::Message::MergeFrom(
          from._internal_message());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Jde::Logging::Proto::RequestString::MergeFrom(
          from._internal_string());
      break;
    }
    case kStatus: {
      _this->_internal_mutable_status()->::Jde::Logging::Proto::Status::MergeFrom(
          from._internal_status());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(
          from._internal_custom());
      break;
    }
    case kComplete: {
      _this->_internal_mutable_complete()->::Jde::Logging::Proto::CustomComplete::MergeFrom(
          from._internal_complete());
      break;
    }
    case kSessionInfo: {
      _this->_internal_mutable_session_info()->::Jde::Logging::Proto::RequestSessionInfo::MergeFrom(
          from._internal_session_info());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToServerUnion::CopyFrom(const ToServerUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.ToServerUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToServerUnion::IsInitialized() const {
  return true;
}

void ToServerUnion::InternalSwap(ToServerUnion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Value_, other->_impl_.Value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToServerUnion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[8]);
}

// ===================================================================

class ToServer::_Internal {
 public:
};

ToServer::ToServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.ToServer)
}
ToServer::ToServer(const ToServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.ToServer)
}

inline void ToServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ToServer::~ToServer() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.ToServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void ToServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.ToServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.ToServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.ToServer)
  return target;
}

size_t ToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.ToServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.ToServerUnion Messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToServer::GetClassData() const { return &_class_data_; }


void ToServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToServer*>(&to_msg);
  auto& from = static_cast<const ToServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.ToServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToServer::CopyFrom(const ToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.ToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToServer::IsInitialized() const {
  return true;
}

void ToServer::InternalSwap(ToServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[9]);
}

// ===================================================================

class Acknowledgement::_Internal {
 public:
};

Acknowledgement::Acknowledgement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.Acknowledgement)
}
Acknowledgement::Acknowledgement(const Acknowledgement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Acknowledgement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instanceid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.instanceid_ = from._impl_.instanceid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Acknowledgement)
}

inline void Acknowledgement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instanceid_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Acknowledgement::~Acknowledgement() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Acknowledgement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Acknowledgement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Acknowledgement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Acknowledgement::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Acknowledgement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instanceid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Acknowledgement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 InstanceId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.instanceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Acknowledgement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Acknowledgement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 InstanceId = 1;
  if (this->_internal_instanceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_instanceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Acknowledgement)
  return target;
}

size_t Acknowledgement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Acknowledgement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 InstanceId = 1;
  if (this->_internal_instanceid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_instanceid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Acknowledgement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Acknowledgement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Acknowledgement::GetClassData() const { return &_class_data_; }


void Acknowledgement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Acknowledgement*>(&to_msg);
  auto& from = static_cast<const Acknowledgement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Acknowledgement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instanceid() != 0) {
    _this->_internal_set_instanceid(from._internal_instanceid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Acknowledgement::CopyFrom(const Acknowledgement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Acknowledgement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acknowledgement::IsInitialized() const {
  return true;
}

void Acknowledgement::InternalSwap(Acknowledgement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.instanceid_, other->_impl_.instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Acknowledgement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[10]);
}

// ===================================================================

class GenericFromServer::_Internal {
 public:
};

GenericFromServer::GenericFromServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.GenericFromServer)
}
GenericFromServer::GenericFromServer(const GenericFromServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenericFromServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){}
    , decltype(_impl_.what_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.what_ = from._impl_.what_;
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.GenericFromServer)
}

inline void GenericFromServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.description_){}
    , decltype(_impl_.what_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GenericFromServer::~GenericFromServer() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.GenericFromServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenericFromServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.description_.Destroy();
}

void GenericFromServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenericFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.GenericFromServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  _impl_.what_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenericFromServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.EFromServer What = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_what(static_cast<::Jde::Logging::Proto::EFromServer>(val));
        } else
          goto handle_unusual;
        continue;
      // string Description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Jde.Logging.Proto.GenericFromServer.Description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GenericFromServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.GenericFromServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.EFromServer What = 1;
  if (this->_internal_what() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_what(), target);
  }

  // string Description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Logging.Proto.GenericFromServer.Description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.GenericFromServer)
  return target;
}

size_t GenericFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.GenericFromServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .Jde.Logging.Proto.EFromServer What = 1;
  if (this->_internal_what() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_what());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenericFromServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenericFromServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenericFromServer::GetClassData() const { return &_class_data_; }


void GenericFromServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenericFromServer*>(&to_msg);
  auto& from = static_cast<const GenericFromServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.GenericFromServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_what() != 0) {
    _this->_internal_set_what(from._internal_what());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenericFromServer::CopyFrom(const GenericFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.GenericFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericFromServer::IsInitialized() const {
  return true;
}

void GenericFromServer::InternalSwap(GenericFromServer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.what_, other->_impl_.what_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenericFromServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[11]);
}

// ===================================================================

class Strings::_Internal {
 public:
};

Strings::Strings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.Strings)
}
Strings::Strings(const Strings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Strings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._messages_cached_byte_size_)*/{0}
    , decltype(_impl_.files_){from._impl_.files_}
    , /*decltype(_impl_._files_cached_byte_size_)*/{0}
    , decltype(_impl_.functions_){from._impl_.functions_}
    , /*decltype(_impl_._functions_cached_byte_size_)*/{0}
    , decltype(_impl_.threads_){from._impl_.threads_}
    , /*decltype(_impl_._threads_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Strings)
}

inline void Strings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._messages_cached_byte_size_)*/{0}
    , decltype(_impl_.files_){arena}
    , /*decltype(_impl_._files_cached_byte_size_)*/{0}
    , decltype(_impl_.functions_){arena}
    , /*decltype(_impl_._functions_cached_byte_size_)*/{0}
    , decltype(_impl_.threads_){arena}
    , /*decltype(_impl_._threads_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Strings::~Strings() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Strings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Strings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedField();
  _impl_.files_.~RepeatedField();
  _impl_.functions_.~RepeatedField();
  _impl_.threads_.~RepeatedField();
}

void Strings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Strings::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Strings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.files_.Clear();
  _impl_.functions_.Clear();
  _impl_.threads_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Strings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_messages(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_messages(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 Files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_files(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_files(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 Functions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_functions(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_functions(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 Threads = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_threads(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_threads(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Strings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Strings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 Messages = 1;
  {
    int byte_size = _impl_._messages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_messages(), byte_size, target);
    }
  }

  // repeated uint32 Files = 2;
  {
    int byte_size = _impl_._files_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_files(), byte_size, target);
    }
  }

  // repeated uint32 Functions = 3;
  {
    int byte_size = _impl_._functions_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_functions(), byte_size, target);
    }
  }

  // repeated uint32 Threads = 4;
  {
    int byte_size = _impl_._threads_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_threads(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Strings)
  return target;
}

size_t Strings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Strings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 Messages = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.messages_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._messages_cached_byte_size_.Set(cached_size);
    total_size += data_size;
  }

  // repeated uint32 Files = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.files_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._files_cached_byte_size_.Set(cached_size);
    total_size += data_size;
  }

  // repeated uint32 Functions = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.functions_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._functions_cached_byte_size_.Set(cached_size);
    total_size += data_size;
  }

  // repeated uint32 Threads = 4;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.threads_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._threads_cached_byte_size_.Set(cached_size);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Strings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Strings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Strings::GetClassData() const { return &_class_data_; }


void Strings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Strings*>(&to_msg);
  auto& from = static_cast<const Strings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Strings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_impl_.files_.MergeFrom(from._impl_.files_);
  _this->_impl_.functions_.MergeFrom(from._impl_.functions_);
  _this->_impl_.threads_.MergeFrom(from._impl_.threads_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Strings::CopyFrom(const Strings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Strings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Strings::IsInitialized() const {
  return true;
}

void Strings::InternalSwap(Strings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  _impl_.functions_.InternalSwap(&other->_impl_.functions_);
  _impl_.threads_.InternalSwap(&other->_impl_.threads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Strings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[12]);
}

// ===================================================================

class Progress::_Internal {
 public:
};

Progress::Progress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.Progress)
}
Progress::Progress(const Progress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Progress* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , decltype(_impl_.requestid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.value_, &from._impl_.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.requestid_) -
    reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.requestid_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.Progress)
}

inline void Progress::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){0}
    , decltype(_impl_.requestid_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Progress::~Progress() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.Progress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Progress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Progress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Progress::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.Progress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.requestid_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.requestid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Progress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double Value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Progress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.Progress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->_internal_requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requestid(), target);
  }

  // double Value = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.Progress)
  return target;
}

size_t Progress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.Progress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double Value = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 8;
  }

  // uint32 RequestId = 1;
  if (this->_internal_requestid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_requestid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Progress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Progress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Progress::GetClassData() const { return &_class_data_; }


void Progress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Progress*>(&to_msg);
  auto& from = static_cast<const Progress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.Progress)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_requestid() != 0) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Progress::CopyFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Progress::IsInitialized() const {
  return true;
}

void Progress::InternalSwap(Progress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Progress, _impl_.requestid_)
      + sizeof(Progress::_impl_.requestid_)
      - PROTOBUF_FIELD_OFFSET(Progress, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Progress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[13]);
}

// ===================================================================

class LogLevels::_Internal {
 public:
};

LogLevels::LogLevels(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.LogLevels)
}
LogLevels::LogLevels(const LogLevels& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogLevels* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.server_){}
    , decltype(_impl_.client_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.server_, &from._impl_.server_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.client_) -
    reinterpret_cast<char*>(&_impl_.server_)) + sizeof(_impl_.client_));
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.LogLevels)
}

inline void LogLevels::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.server_){0}
    , decltype(_impl_.client_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LogLevels::~LogLevels() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.LogLevels)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogLevels::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LogLevels::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogLevels::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.LogLevels)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.client_) -
      reinterpret_cast<char*>(&_impl_.server_)) + sizeof(_impl_.client_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogLevels::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.ELogLevel Server = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_server(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.ELogLevel Client = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_client(static_cast<::Jde::Logging::Proto::ELogLevel>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogLevels::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.LogLevels)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.ELogLevel Server = 1;
  if (this->_internal_server() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_server(), target);
  }

  // .Jde.Logging.Proto.ELogLevel Client = 2;
  if (this->_internal_client() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_client(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.LogLevels)
  return target;
}

size_t LogLevels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.LogLevels)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Jde.Logging.Proto.ELogLevel Server = 1;
  if (this->_internal_server() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_server());
  }

  // .Jde.Logging.Proto.ELogLevel Client = 2;
  if (this->_internal_client() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_client());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogLevels::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogLevels::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogLevels::GetClassData() const { return &_class_data_; }


void LogLevels::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogLevels*>(&to_msg);
  auto& from = static_cast<const LogLevels&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.LogLevels)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_server() != 0) {
    _this->_internal_set_server(from._internal_server());
  }
  if (from._internal_client() != 0) {
    _this->_internal_set_client(from._internal_client());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogLevels::CopyFrom(const LogLevels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.LogLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogLevels::IsInitialized() const {
  return true;
}

void LogLevels::InternalSwap(LogLevels* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogLevels, _impl_.client_)
      + sizeof(LogLevels::_impl_.client_)
      - PROTOBUF_FIELD_OFFSET(LogLevels, _impl_.server_)>(
          reinterpret_cast<char*>(&_impl_.server_),
          reinterpret_cast<char*>(&other->_impl_.server_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogLevels::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[14]);
}

// ===================================================================

class FromServerUnion::_Internal {
 public:
  static constexpr int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::Jde::Logging::Proto::FromServerUnion, _impl_._oneof_case_);
  static const ::Jde::Logging::Proto::Acknowledgement& acknowledgement(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::GenericFromServer& generic(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::Strings& strings(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::LogLevels& loglevels(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::CustomMessage& custom(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::Progress& progress(const FromServerUnion* msg);
  static const ::Jde::Logging::Proto::SessionInfo& session_info(const FromServerUnion* msg);
};

const ::Jde::Logging::Proto::Acknowledgement&
FromServerUnion::_Internal::acknowledgement(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.acknowledgement_;
}
const ::Jde::Logging::Proto::GenericFromServer&
FromServerUnion::_Internal::generic(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.generic_;
}
const ::Jde::Logging::Proto::Strings&
FromServerUnion::_Internal::strings(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.strings_;
}
const ::Jde::Logging::Proto::LogLevels&
FromServerUnion::_Internal::loglevels(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.loglevels_;
}
const ::Jde::Logging::Proto::CustomMessage&
FromServerUnion::_Internal::custom(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.custom_;
}
const ::Jde::Logging::Proto::Progress&
FromServerUnion::_Internal::progress(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.progress_;
}
const ::Jde::Logging::Proto::SessionInfo&
FromServerUnion::_Internal::session_info(const FromServerUnion* msg) {
  return *msg->_impl_.Value_.session_info_;
}
void FromServerUnion::set_allocated_acknowledgement(::Jde::Logging::Proto::Acknowledgement* acknowledgement) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (acknowledgement) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(acknowledgement);
    if (message_arena != submessage_arena) {
      acknowledgement = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acknowledgement, submessage_arena);
    }
    set_has_acknowledgement();
    _impl_.Value_.acknowledgement_ = acknowledgement;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Acknowledgement)
}
void FromServerUnion::set_allocated_generic(::Jde::Logging::Proto::GenericFromServer* generic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (generic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generic);
    if (message_arena != submessage_arena) {
      generic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generic, submessage_arena);
    }
    set_has_generic();
    _impl_.Value_.generic_ = generic;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Generic)
}
void FromServerUnion::set_allocated_strings(::Jde::Logging::Proto::Strings* strings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (strings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(strings);
    if (message_arena != submessage_arena) {
      strings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, strings, submessage_arena);
    }
    set_has_strings();
    _impl_.Value_.strings_ = strings;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Strings)
}
void FromServerUnion::set_allocated_loglevels(::Jde::Logging::Proto::LogLevels* loglevels) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (loglevels) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(loglevels);
    if (message_arena != submessage_arena) {
      loglevels = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loglevels, submessage_arena);
    }
    set_has_loglevels();
    _impl_.Value_.loglevels_ = loglevels;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.LogLevels)
}
void FromServerUnion::set_allocated_custom(::Jde::Logging::Proto::CustomMessage* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.Value_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Custom)
}
void FromServerUnion::set_allocated_progress(::Jde::Logging::Proto::Progress* progress) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (progress) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(progress);
    if (message_arena != submessage_arena) {
      progress = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, progress, submessage_arena);
    }
    set_has_progress();
    _impl_.Value_.progress_ = progress;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.Progress)
}
void FromServerUnion::set_allocated_session_info(::Jde::Logging::Proto::SessionInfo* session_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (session_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(session_info);
    if (message_arena != submessage_arena) {
      session_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, session_info, submessage_arena);
    }
    set_has_session_info();
    _impl_.Value_.session_info_ = session_info;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Logging.Proto.FromServerUnion.session_info)
}
FromServerUnion::FromServerUnion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.FromServerUnion)
}
FromServerUnion::FromServerUnion(const FromServerUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FromServerUnion* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kAcknowledgement: {
      _this->_internal_mutable_acknowledgement()->::Jde::Logging::Proto::Acknowledgement::MergeFrom(
          from._internal_acknowledgement());
      break;
    }
    case kGeneric: {
      _this->_internal_mutable_generic()->::Jde::Logging::Proto::GenericFromServer::MergeFrom(
          from._internal_generic());
      break;
    }
    case kStrings: {
      _this->_internal_mutable_strings()->::Jde::Logging::Proto::Strings::MergeFrom(
          from._internal_strings());
      break;
    }
    case kLogLevels: {
      _this->_internal_mutable_loglevels()->::Jde::Logging::Proto::LogLevels::MergeFrom(
          from._internal_loglevels());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(
          from._internal_custom());
      break;
    }
    case kProgress: {
      _this->_internal_mutable_progress()->::Jde::Logging::Proto::Progress::MergeFrom(
          from._internal_progress());
      break;
    }
    case kSessionInfo: {
      _this->_internal_mutable_session_info()->::Jde::Logging::Proto::SessionInfo::MergeFrom(
          from._internal_session_info());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.FromServerUnion)
}

inline void FromServerUnion::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Value();
}

FromServerUnion::~FromServerUnion() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.FromServerUnion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FromServerUnion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Value()) {
    clear_Value();
  }
}

void FromServerUnion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FromServerUnion::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Logging.Proto.FromServerUnion)
  switch (Value_case()) {
    case kAcknowledgement: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.acknowledgement_;
      }
      break;
    }
    case kGeneric: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.generic_;
      }
      break;
    }
    case kStrings: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.strings_;
      }
      break;
    }
    case kLogLevels: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.loglevels_;
      }
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.custom_;
      }
      break;
    }
    case kProgress: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.progress_;
      }
      break;
    }
    case kSessionInfo: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.session_info_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void FromServerUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.FromServerUnion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FromServerUnion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_acknowledgement(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.GenericFromServer Generic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Strings Strings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_strings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.LogLevels LogLevels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_loglevels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.CustomMessage Custom = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.Progress Progress = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_progress(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Jde.Logging.Proto.SessionInfo session_info = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_session_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FromServerUnion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.FromServerUnion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
  if (_internal_has_acknowledgement()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::acknowledgement(this),
        _Internal::acknowledgement(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.GenericFromServer Generic = 2;
  if (_internal_has_generic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::generic(this),
        _Internal::generic(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.Strings Strings = 3;
  if (_internal_has_strings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::strings(this),
        _Internal::strings(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.LogLevels LogLevels = 4;
  if (_internal_has_loglevels()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::loglevels(this),
        _Internal::loglevels(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.CustomMessage Custom = 5;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.Progress Progress = 6;
  if (_internal_has_progress()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::progress(this),
        _Internal::progress(this).GetCachedSize(), target, stream);
  }

  // .Jde.Logging.Proto.SessionInfo session_info = 7;
  if (_internal_has_session_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::session_info(this),
        _Internal::session_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.FromServerUnion)
  return target;
}

size_t FromServerUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.FromServerUnion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // .Jde.Logging.Proto.Acknowledgement Acknowledgement = 1;
    case kAcknowledgement: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.acknowledgement_);
      break;
    }
    // .Jde.Logging.Proto.GenericFromServer Generic = 2;
    case kGeneric: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.generic_);
      break;
    }
    // .Jde.Logging.Proto.Strings Strings = 3;
    case kStrings: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.strings_);
      break;
    }
    // .Jde.Logging.Proto.LogLevels LogLevels = 4;
    case kLogLevels: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.loglevels_);
      break;
    }
    // .Jde.Logging.Proto.CustomMessage Custom = 5;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.custom_);
      break;
    }
    // .Jde.Logging.Proto.Progress Progress = 6;
    case kProgress: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.progress_);
      break;
    }
    // .Jde.Logging.Proto.SessionInfo session_info = 7;
    case kSessionInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.session_info_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FromServerUnion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FromServerUnion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FromServerUnion::GetClassData() const { return &_class_data_; }


void FromServerUnion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FromServerUnion*>(&to_msg);
  auto& from = static_cast<const FromServerUnion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.FromServerUnion)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kAcknowledgement: {
      _this->_internal_mutable_acknowledgement()->::Jde::Logging::Proto::Acknowledgement::MergeFrom(
          from._internal_acknowledgement());
      break;
    }
    case kGeneric: {
      _this->_internal_mutable_generic()->::Jde::Logging::Proto::GenericFromServer::MergeFrom(
          from._internal_generic());
      break;
    }
    case kStrings: {
      _this->_internal_mutable_strings()->::Jde::Logging::Proto::Strings::MergeFrom(
          from._internal_strings());
      break;
    }
    case kLogLevels: {
      _this->_internal_mutable_loglevels()->::Jde::Logging::Proto::LogLevels::MergeFrom(
          from._internal_loglevels());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Jde::Logging::Proto::CustomMessage::MergeFrom(
          from._internal_custom());
      break;
    }
    case kProgress: {
      _this->_internal_mutable_progress()->::Jde::Logging::Proto::Progress::MergeFrom(
          from._internal_progress());
      break;
    }
    case kSessionInfo: {
      _this->_internal_mutable_session_info()->::Jde::Logging::Proto::SessionInfo::MergeFrom(
          from._internal_session_info());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FromServerUnion::CopyFrom(const FromServerUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.FromServerUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromServerUnion::IsInitialized() const {
  return true;
}

void FromServerUnion::InternalSwap(FromServerUnion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Value_, other->_impl_.Value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FromServerUnion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[15]);
}

// ===================================================================

class FromServer::_Internal {
 public:
};

FromServer::FromServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Jde.Logging.Proto.FromServer)
}
FromServer::FromServer(const FromServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FromServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Logging.Proto.FromServer)
}

inline void FromServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FromServer::~FromServer() {
  // @@protoc_insertion_point(destructor:Jde.Logging.Proto.FromServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FromServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void FromServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Logging.Proto.FromServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FromServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FromServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Logging.Proto.FromServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Logging.Proto.FromServer)
  return target;
}

size_t FromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Logging.Proto.FromServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Logging.Proto.FromServerUnion Messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FromServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FromServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FromServer::GetClassData() const { return &_class_data_; }


void FromServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FromServer*>(&to_msg);
  auto& from = static_cast<const FromServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Jde.Logging.Proto.FromServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FromServer::CopyFrom(const FromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Logging.Proto.FromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromServer::IsInitialized() const {
  return true;
}

void FromServer::InternalSwap(FromServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FromServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[16]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Logging
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Instance*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Instance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::Instance >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Message*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::Message >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::SessionInfo*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::SessionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::SessionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::RequestString*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::RequestString >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::RequestString >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Status*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::CustomMessage*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::CustomMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::CustomMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::CustomComplete*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::CustomComplete >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::CustomComplete >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::RequestSessionInfo*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::RequestSessionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::RequestSessionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::ToServerUnion*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::ToServerUnion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::ToServerUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::ToServer*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::ToServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::ToServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Acknowledgement*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Acknowledgement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::Acknowledgement >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::GenericFromServer*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::GenericFromServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::GenericFromServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Strings*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Strings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::Strings >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::Progress*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::Progress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::Progress >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::LogLevels*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::LogLevels >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::LogLevels >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::FromServerUnion*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::FromServerUnion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::FromServerUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Logging::Proto::FromServer*
Arena::CreateMaybeMessage< ::Jde::Logging::Proto::FromServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Jde::Logging::Proto::FromServer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
